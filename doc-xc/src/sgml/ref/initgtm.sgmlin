<!--
doc/src/sgml/ref/initgtm.sgml
Postgres-XC documentation
-->

<!## XC>
<refentry id="APP-INITGTM">
 <refmeta>
  <refentrytitle>initgtm</refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>initgtm</refname>
  <refpurpose>create a new <productname>Postgres-XC</productname> GTM or GTM-Proxy for database cluster</refpurpose>
 </refnamediv>

 <indexterm zone="app-initgtm">
  <primary>initgtm</primary>
 </indexterm>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>initgtm</command>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
   <group choice="plain">
    <arg>--pgdata</arg>
    <arg>-D </arg>
    <replaceable>directory</replaceable>
   </group>
   <arg choice="plain">-Z <replaceable>nodetype</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1 id="R1-APP-INITGTM-1">
  <title>
   Description
  </title>
&common;
  <para>
   <command>initgtm</command> creates a new GTM or GTM-Proxy node for a
   <productname>Postgres-XC</productname> database cluster.  A database
   cluster has a unique GTM. A GTM-Proxy acts as an intermediate component
   between GTM and Postgres-XC nodes to group request messages. Each Coordinator
   and Datanode of the cluster need to register to GTM when starting up.
  </para>

  <para>
   Creating a GTM for cluster consists of creating the directories and files in
   which the GTM data will live.
  </para>

  <para>
   Although <command>initgtm</command> will attempt to create the
   specified data directory, it might not have permission if the parent
   directory of the desired data directory is root-owned. To initialize
   in such a setup, create an empty data directory as root, then use
   <command>chown</command> to assign ownership of that directory to the
   database user account, then <command>su</command> to become the
   database user to run <command>initgtm</command>.
  </para>

  <para>
   <command>initgtm</command> must be run as the user that will own the
   server process, because the server needs to have access to the
   files and directories that <command>initgtm</command> creates.
   Since the server cannot be run as root, you must not run
   <command>initgtm</command> as root either.  (It will in fact refuse
   to do so.)
  </para>

&xconly;
  <para>
   <command>initgtm</> will be performed locally.
  </para>

 </refsect1>

 <refsect1>
  <title>Options</title>

   <para>
    <variablelist>
     <varlistentry>
      <term><option>-D <replaceable class="parameter">directory</replaceable></option></term>
      <term><option>--pgdata=<replaceable class="parameter">directory</replaceable></option></term>
      <listitem>
       <para>
        This option specifies the directory where the GTM data
        should be stored. Data folder and node type are the only information
        required by <command>initgtm</command>. You can avoid writing it by
        setting the <envar>PGDATA</envar> environment variable.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-Z <replaceable class="parameter">nodetype</replaceable></option></term>
      <listitem>
       <para>
        This option specifies the node type which is initialized. It is possible to
        specify gtm to set up a GTM node, or gtm_proxy to set up a GTM-Proxy.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>

   <para>
    Other, less commonly used, parameters are also available:

    <variablelist>
     <varlistentry>
      <term><option>-d</option></term>
      <term><option>--debug</option></term>
      <listitem>
       <para>
        Print debugging output from the bootstrap backend and a few other
        messages of lesser interest for the general public.
        The bootstrap backend is the program <command>initgtm</command>
        uses to create the catalog tables.  This option generates a tremendous
        amount of extremely boring output.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-n</option></term>
      <term><option>--noclean</option></term>
      <listitem>
       <para>
        By default, when <command>initgtm</command>
        determines that an error prevented it from completely creating GTM data
        it removes any files it might have created before discovering
        that it cannot finish the job. This option inhibits tidying-up and is
        thus useful for debugging.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-V</></term>
       <term><option>--version</></term>
       <listitem>
       <para>
       Print the <application>initgtm</application> version and exit.
       </para>
       </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-?</></term>
       <term><option>--help</></term>
       <listitem>
       <para>
       Show help about <application>initgtm</application> command line
       arguments, and exit.
       </para>
       </listitem>
     </varlistentry>

    </variablelist>
   </para>

 </refsect1>

 <refsect1>
  <title>Environment</title>

  <variablelist>
   <varlistentry>
    <term><envar>PGDATA</envar></term>

    <listitem>
     <para>
      Specifies the directory where the GTM data is to be
      stored; can be overridden using the <option>-D</option> option.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

 </refsect1>

 <refsect1>
  <title>Notes</title>

&xconly;
  <para>
   <command>initgtm</> runs only locally.
  </para>
 </refsect1>

 <refsect1>
  <title>See Also</title>

  <simplelist type="inline">
   <member><xref linkend="app-gtm-ctl"></member>
  </simplelist>
 </refsect1>

</refentry>
<!## end>
