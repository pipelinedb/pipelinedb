<?xml version="1.0"?>
<!--
 * build file
 *
 * PostGIS JDBC driver
 *
 * (C) 2007  Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>
 * Rewritten on 2012 by Maria Arias de Reyna <delawen@gmail.com> 
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 2.1 of the License.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA or visit the web at
 * http://www.gnu.org.
 *

 Usage: ant build

 -->

<project name="postgis-jdbc-driver" default="all" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">


  <!-- Global properties -->
  <property name="stubsrc" value="stubs"/>
  <property name="stubbuild" value="stubbin"/>
  <property name="src" value="src"/>
  <property name="build" value="bin"/>
  <property name="javadocbuild" value="javadoc-build"/>
  <property name="javadoczip" value="postgis-jdbc-javadoc.zip"/>
  <property name="regresslog" value="test.log"/>
  <property name="pgdefaultjar" value="/usr/share/java/postgresql.jar"/>
  <property name="versioninfo" value="../../Version.config"/>

  <!-- Environment variables -->
  <property environment="env"/>

  <!-- Load in the version information from Version.config -->
  <property file="${versioninfo}"/>
  <property name="postgis_version" value="${POSTGIS_MAJOR_VERSION}.${POSTGIS_MINOR_VERSION}.${POSTGIS_MICRO_VERSION}"/>

  <path id="regressclasspath">
    <pathelement path="${pgdefaultjar}"/>
    <pathelement path="${classpath}"/>
    <pathelement location="postgis_${postgis_version}.jar"/>
  </path>


     <!-- Loading Maven dependencies -->
     <mkdir dir="lib"/>
     <get src="http://www.apache.org/dist/maven/ant-tasks/2.1.3/binaries/maven-ant-tasks-2.1.3.jar"
          dest="lib/maven-ant-tasks-2.1.3.jar"/>

     <path id="maven-ant-tasks.classpath" path="lib/maven-ant-tasks-2.1.3.jar" />
     <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
           uri="antlib:org.apache.maven.artifact.ant"
           classpathref="maven-ant-tasks.classpath" />

     <target name="build">
      <artifact:mvn pom="pom.xml">
         <arg value="package"/>
      </artifact:mvn> 
     </target>

    <target name="all" depends="build"/>
  
     <target name="clean">
      <artifact:mvn pom="pom.xml">
         <arg value="clean"/>
      </artifact:mvn>
     </target>

    <target name="distclean" depends="clean">
      <delete dir="${user.home}/.m2/repository/"/>
      <delete dir="lib"/>
    </target>

  <target name="check">
     <artifact:mvn pom="pom.xml">
       <arg value="test"/>
     </artifact:mvn>
  </target>

  <!-- Extra targets -->

  <!-- Offline regression tests -->
  <target name="offline-regression" depends="boxtestoffline-regression, ptestoffline-regression, test-regression"/>
 
  <target name="boxtestoffline-regression">
    <java classname="examples.TestBoxes" fork="true" output="${regresslog}" error="${regresslog}.err" append="true">
      <arg value="offline"/>
      <classpath refid="regressclasspath"/>
    </java>

    <!-- Show any errors -->
    <loadfile property="stderr" srcfile="${regresslog}.err"/>
    <echo message="${stderr}"/>
    <delete>
      <fileset dir="." includes="${regresslog}.err"/>
    </delete>
  </target>

  <target name="ptestoffline-regression">
    <java classname="examples.TestParser" fork="true" output="${regresslog}" error="${regresslog}.err" append="true">
      <arg value="offline"/>
      <classpath refid="regressclasspath"/>
    </java>
    
    <!-- Show any errors -->
    <loadfile property="stderr" srcfile="${regresslog}.err"/>
    <echo message="${stderr}"/>
    <delete>
      <fileset dir="." includes="${regresslog}.err"/>
    </delete>
  </target>
  
  <target name="test-regression">
    <java classname="examples.Test" fork="true" output="${regresslog}" error="${regresslog}.err" append="true">
      <arg value="offline"/>
      <classpath refid="regressclasspath"/>
    </java>
    
    <!-- Show any errors -->
    <loadfile property="stderr" srcfile="${regresslog}.err"/>
    <echo message="${stderr}"/>
    <delete>
      <fileset dir="." includes="${regresslog}.err"/>
    </delete>
  </target>



  <!-- Documentation -->
  <target name="javadoc" depends="build">
    <javadoc sourcepath="${src}" destdir="${javadocbuild}">
      <package name="org.postgis"/>
      <package name="org.postgis.jts"/>
      <package name="org.postgis.binary"/>
      <package name="org.postgis.java2d"/>
      <package name="examples"/>
    </javadoc>
  </target>

  <target name="javadoc-compress" depends="javadoc">
    <!-- Compress the documentation into a single ZIP file -->
    <zip basedir="${javadocbuild}" destfile="${javadoczip}"/>
  </target>

</project>
