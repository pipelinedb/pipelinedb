CREATE CONTINUOUS VIEW cqlatch AS SELECT id::integer FROM stream_latch;
ACTIVATE cqlatch;
-- Wait at least 3 seconds till the worker latch is actually blocked
SELECT pg_sleep_for('3 seconds');
 pg_sleep_for 
--------------
 
(1 row)

-- Query the activity table to verify that the worker is waiting on the latch
SELECT query, state FROM pg_stat_activity WHERE query LIKE '%stream_latch%' ORDER BY query;
                                            query                                            | state  
---------------------------------------------------------------------------------------------+--------
 SELECT id::integer FROM stream_latch;                                                       | idle
 SELECT id::integer FROM stream_latch;                                                       | idle
 SELECT query, state FROM pg_stat_activity WHERE query LIKE '%stream_latch%' ORDER BY query; | active
(3 rows)

-- Insert something into the stream so that the latch is released
INSERT INTO stream_latch (id) VALUES (4);
INSERT INTO stream_latch (id) VALUES (5);
-- Query the activity table verify that the worker latch is unblocked
SELECT query, state FROM pg_stat_activity WHERE query LIKE '%stream_latch%' ORDER BY query;
                                            query                                            | state  
---------------------------------------------------------------------------------------------+--------
 SELECT id::integer FROM stream_latch;                                                       | active
 SELECT id::integer FROM stream_latch;                                                       | active
 SELECT query, state FROM pg_stat_activity WHERE query LIKE '%stream_latch%' ORDER BY query; | active
(3 rows)

DEACTIVATE cqlatch;
DROP CONTINUOUS VIEW cqlatch;
