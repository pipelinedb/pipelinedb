-- Simple ones
CREATE CONTINUOUS VIEW cqcreate0 AS SELECT key::integer FROM create_cont_stream1;
SELECT COUNT(*) FROM pipeline_query WHERE name='cqcreate0';
 count 
-------
     1
(1 row)

SELECT gc FROM pipeline_query WHERE name='cqcreate0';
 gc 
----
 f
(1 row)

\d+ cqcreate0;
               View "public.cqcreate0"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 key    | integer |           | plain   | 
View definition:
 SELECT cqcreate0_mrel0.key
   FROM cqcreate0_mrel0;

\d+ cqcreate0_mrel0;
                   Table "public.cqcreate0_mrel0"
 Column |  Type   | Modifiers | Storage | Stats target | Description 
--------+---------+-----------+---------+--------------+-------------
 key    | integer |           | plain   |              | 
Options: fillfactor=50

CREATE CONTINUOUS VIEW cqcreate1 AS SELECT substring(url::text, 1, 2) FROM create_cont_stream1;
SELECT COUNT(*) FROM pipeline_query WHERE name='cqcreate1';
 count 
-------
     1
(1 row)

\d+ cqcreate1;
                View "public.cqcreate1"
  Column   | Type | Modifiers | Storage  | Description 
-----------+------+-----------+----------+-------------
 substring | text |           | extended | 
View definition:
 SELECT cqcreate1_mrel0."substring"
   FROM cqcreate1_mrel0;

\d+ cqcreate1_mrel0;
                    Table "public.cqcreate1_mrel0"
  Column   | Type | Modifiers | Storage  | Stats target | Description 
-----------+------+-----------+----------+--------------+-------------
 substring | text |           | extended |              | 
Options: fillfactor=50

CREATE CONTINUOUS VIEW cqcreate2 AS SELECT key::integer, substring(value::text, 1, 2) AS s FROM create_cont_stream1;
SELECT COUNT(*) FROM pipeline_query WHERE name='cqcreate2';
 count 
-------
     1
(1 row)

\d+ cqcreate2;
                View "public.cqcreate2"
 Column |  Type   | Modifiers | Storage  | Description 
--------+---------+-----------+----------+-------------
 key    | integer |           | plain    | 
 s      | text    |           | extended | 
View definition:
 SELECT cqcreate2_mrel0.key,
    cqcreate2_mrel0.s
   FROM cqcreate2_mrel0;

\d+ cqcreate2_mrel0;
                    Table "public.cqcreate2_mrel0"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 key    | integer |           | plain    |              | 
 s      | text    |           | extended |              | 
Options: fillfactor=50

-- Group by projections
CREATE CONTINUOUS VIEW cqcreate3 AS SELECT key::text, COUNT(*), SUM(value::int8) FROM cont_create_stream2 GROUP BY key;
SELECT COUNT(*) FROM pipeline_query WHERE name='cqcreate3';
 count 
-------
     1
(1 row)

\d+ cqcreate3;
                View "public.cqcreate3"
 Column |  Type   | Modifiers | Storage  | Description 
--------+---------+-----------+----------+-------------
 key    | text(0) |           | extended | 
 count  | bigint  |           | plain    | 
 sum    | numeric |           | main     | 
View definition:
 SELECT cqcreate3_mrel0.key,
    cqcreate3_mrel0.count,
    cqcreate3_mrel0.sum
   FROM cqcreate3_mrel0;

\d+ cqcreate3_mrel0;
                    Table "public.cqcreate3_mrel0"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 key    | text(0) |           | extended |              | 
 count  | bigint  |           | plain    |              | 
 sum    | numeric |           | main     |              | 
 _0     | bytea   |           | extended |              | 
Indexes:
    "cqcreate3_mrel0_expr_idx" btree (hash_group(key))
Options: fillfactor=50

CREATE CONTINUOUS VIEW cqcreate4 AS SELECT COUNT(*), SUM(value::int8) FROM cont_create_stream2 GROUP BY key::text;
SELECT COUNT(*) FROM pipeline_query WHERE name='cqcreate4';
 count 
-------
     1
(1 row)

\d+ cqcreate4;
               View "public.cqcreate4"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 count  | bigint  |           | plain   | 
 sum    | numeric |           | main    | 
View definition:
 SELECT cqcreate4_mrel0.count,
    cqcreate4_mrel0.sum
   FROM cqcreate4_mrel0;

\d+ cqcreate4_mrel0;
                    Table "public.cqcreate4_mrel0"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 count  | bigint  |           | plain    |              | 
 sum    | numeric |           | main     |              | 
 _1     | bytea   |           | extended |              | 
 _0     | text(0) |           | extended |              | 
Indexes:
    "cqcreate4_mrel0_expr_idx" btree (hash_group(_0))
Options: fillfactor=50

-- Sliding window queries
CREATE CONTINUOUS VIEW cqcreate5 AS SELECT key::text FROM cont_create_stream2 WHERE arrival_timestamp > (clock_timestamp() - interval '5' second);
SELECT COUNT(*) FROM pipeline_query WHERE name='cqcreate5';
 count 
-------
     1
(1 row)

SELECT gc FROM pipeline_query WHERE name='cqcreate5';
 gc 
----
 t
(1 row)

\d+ cqcreate5;
                View "public.cqcreate5"
 Column |  Type   | Modifiers | Storage  | Description 
--------+---------+-----------+----------+-------------
 key    | text(0) |           | extended | 
View definition:
 SELECT cqcreate5_mrel0.key
   FROM cqcreate5_mrel0
  WHERE cqcreate5_mrel0._0 > (clock_timestamp() - '@ 5 secs'::interval second);

\d+ cqcreate5_mrel0;
                              Table "public.cqcreate5_mrel0"
 Column |            Type             | Modifiers | Storage  | Stats target | Description 
--------+-----------------------------+-----------+----------+--------------+-------------
 key    | text(0)                     |           | extended |              | 
 _0     | timestamp(0) with time zone |           | plain    |              | 
Indexes:
    "cqcreate5_mrel0__0_idx" btree (_0)
Options: fillfactor=50

CREATE CONTINUOUS VIEW cqcreate6 AS SELECT COUNT(*) FROM cont_create_stream2 WHERE arrival_timestamp > (clock_timestamp() - interval '5' second) GROUP BY key::text;
SELECT COUNT(*) FROM pipeline_query WHERE name='cqcreate6';
 count 
-------
     1
(1 row)

SELECT gc FROM pipeline_query WHERE name='cqcreate5';
 gc 
----
 t
(1 row)

\d+ cqcreate6;
               View "public.cqcreate6"
 Column |  Type  | Modifiers | Storage | Description 
--------+--------+-----------+---------+-------------
 count  | bigint |           | plain   | 
View definition:
 SELECT combine(cqcreate6_mrel0.1) AS count
   FROM cqcreate6_mrel0
  WHERE cqcreate6_mrel0._0 > (clock_timestamp() - '@ 5 secs'::interval second)
  GROUP BY cqcreate6_mrel0._1;

\d+ cqcreate6_mrel0;
                            Table "public.cqcreate6_mrel0"
 Column |           Type           | Modifiers | Storage  | Stats target | Description 
--------+--------------------------+-----------+----------+--------------+-------------
 count  | bigint                   |           | plain    |              | 
 _1     | text(0)                  |           | extended |              | 
 _0     | timestamp with time zone |           | plain    |              | 
Indexes:
    "cqcreate6_mrel0_expr_idx" btree (ls_hash_group(_1, _0))
Options: fillfactor=50

-- These use a combine state column
CREATE CONTINUOUS VIEW cvavg AS SELECT key::text, AVG(x::float8) AS float_avg, AVG(y::integer) AS int_avg, AVG(ts0::timestamp - ts1::timestamp) AS internal_avg FROM cont_create_stream2 GROUP BY key;
\d+ cvavg;
                         View "public.cvavg"
    Column    |       Type       | Modifiers | Storage  | Description 
--------------+------------------+-----------+----------+-------------
 key          | text(0)          |           | extended | 
 float_avg    | double precision |           | plain    | 
 int_avg      | numeric          |           | main     | 
 internal_avg | interval         |           | plain    | 
View definition:
 SELECT cvavg_mrel0.key,
    cvavg_mrel0.float_avg,
    cvavg_mrel0.int_avg,
    cvavg_mrel0.internal_avg
   FROM cvavg_mrel0;

\d+ cvavg_mrel0;
                              Table "public.cvavg_mrel0"
    Column    |        Type        | Modifiers | Storage  | Stats target | Description 
--------------+--------------------+-----------+----------+--------------+-------------
 key          | text(0)            |           | extended |              | 
 float_avg    | double precision   |           | plain    |              | 
 _0           | double precision[] |           | extended |              | 
 int_avg      | numeric            |           | main     |              | 
 _1           | bigint[]           |           | extended |              | 
 internal_avg | interval           |           | plain    |              | 
 _2           | interval[]         |           | extended |              | 
Indexes:
    "cvavg_mrel0_expr_idx" btree (hash_group(key))
Options: fillfactor=50

CREATE CONTINUOUS VIEW cvjson AS SELECT json_agg(x::text) AS count_col FROM create_cont_stream1;
\d+ cvjson;
                 View "public.cvjson"
  Column   | Type | Modifiers | Storage  | Description 
-----------+------+-----------+----------+-------------
 count_col | json |           | extended | 
View definition:
 SELECT cvjson_mrel0.count_col
   FROM cvjson_mrel0;

\d+ cvjson_mrel0;
                      Table "public.cvjson_mrel0"
  Column   | Type  | Modifiers | Storage  | Stats target | Description 
-----------+-------+-----------+----------+--------------+-------------
 count_col | json  |           | extended |              | 
 _0        | bytea |           | extended |              | 
Options: fillfactor=50

CREATE CONTINUOUS VIEW cvjsonobj AS SELECT json_object_agg(key::text, value::integer) FROM cont_create_stream2;
\d+ cvjsonobj;
                   View "public.cvjsonobj"
     Column      | Type | Modifiers | Storage  | Description 
-----------------+------+-----------+----------+-------------
 json_object_agg | json |           | extended | 
View definition:
 SELECT cvjsonobj_mrel0.json_object_agg
   FROM cvjsonobj_mrel0;

\d+ cvjsonobj_mrel0;
                       Table "public.cvjsonobj_mrel0"
     Column      | Type  | Modifiers | Storage  | Stats target | Description 
-----------------+-------+-----------+----------+--------------+-------------
 json_object_agg | json  |           | extended |              | 
 _0              | bytea |           | extended |              | 
Options: fillfactor=50

-- But these aggregates don't
CREATE CONTINUOUS VIEW cvcount AS SELECT SUM(x::integer + y::float8) AS sum_col FROM cont_create_stream2;
\d+ cvcount;
                     View "public.cvcount"
 Column  |       Type       | Modifiers | Storage | Description 
---------+------------------+-----------+---------+-------------
 sum_col | double precision |           | plain   | 
View definition:
 SELECT cvcount_mrel0.sum_col
   FROM cvcount_mrel0;

\d+ cvcount_mrel0;
                         Table "public.cvcount_mrel0"
 Column  |       Type       | Modifiers | Storage | Stats target | Description 
---------+------------------+-----------+---------+--------------+-------------
 sum_col | double precision |           | plain   |              | 
Options: fillfactor=50

CREATE CONTINUOUS VIEW cvarray AS SELECT COUNT(*) as count_col FROM create_cont_stream1;
\d+ cvarray;
                 View "public.cvarray"
  Column   |  Type  | Modifiers | Storage | Description 
-----------+--------+-----------+---------+-------------
 count_col | bigint |           | plain   | 
View definition:
 SELECT cvarray_mrel0.count_col
   FROM cvarray_mrel0;

\d+ cvarray_mrel0;
                     Table "public.cvarray_mrel0"
  Column   |  Type  | Modifiers | Storage | Stats target | Description 
-----------+--------+-----------+---------+--------------+-------------
 count_col | bigint |           | plain   |              | 
Options: fillfactor=50

CREATE CONTINUOUS VIEW cvtext AS SELECT key::text, string_agg(substring(s::text, 1, 2), ',') FROM cont_create_stream2 GROUP BY key;
\d+ cvtext;
                   View "public.cvtext"
   Column   |  Type   | Modifiers | Storage  | Description 
------------+---------+-----------+----------+-------------
 key        | text(0) |           | extended | 
 string_agg | text    |           | extended | 
View definition:
 SELECT cvtext_mrel0.key,
    cvtext_mrel0.string_agg
   FROM cvtext_mrel0;

\d+ cvtext_mrel0;
                       Table "public.cvtext_mrel0"
   Column   |  Type   | Modifiers | Storage  | Stats target | Description 
------------+---------+-----------+----------+--------------+-------------
 key        | text(0) |           | extended |              | 
 string_agg | text    |           | extended |              | 
 _0         | bytea   |           | extended |              | 
Indexes:
    "cvtext_mrel0_expr_idx" btree (hash_group(key))
Options: fillfactor=50

-- Check for expressions containing aggregates
CREATE CONTINUOUS VIEW cqaggexpr1 AS SELECT COUNT(*) + SUM(x::int) FROM cont_create_stream2;
\d+ cqaggexpr1;
               View "public.cqaggexpr1"
  Column  |  Type  | Modifiers | Storage | Description 
----------+--------+-----------+---------+-------------
 ?column? | bigint |           | plain   | 
View definition:
 SELECT cqaggexpr1_mrel0._0 + cqaggexpr1_mrel0._1
   FROM cqaggexpr1_mrel0;

\d+ cqaggexpr1_mrel0;
                  Table "public.cqaggexpr1_mrel0"
 Column |  Type  | Modifiers | Storage | Stats target | Description 
--------+--------+-----------+---------+--------------+-------------
 _0     | bigint |           | plain   |              | 
 _1     | bigint |           | plain   |              | 
Options: fillfactor=50

CREATE CONTINUOUS VIEW cqaggexpr2 AS SELECT key::text, AVG(x::float) + MAX(y::integer) AS value FROM cont_create_stream2 GROUP BY key;
\d+ cqaggexpr2;
                    View "public.cqaggexpr2"
 Column |       Type       | Modifiers | Storage  | Description 
--------+------------------+-----------+----------+-------------
 key    | text(0)          |           | extended | 
 value  | double precision |           | plain    | 
View definition:
 SELECT cqaggexpr2_mrel0.key,
    cqaggexpr2_mrel0._0 + cqaggexpr2_mrel0._1::double precision AS value
   FROM cqaggexpr2_mrel0;

\d+ cqaggexpr2_mrel0;
                         Table "public.cqaggexpr2_mrel0"
 Column |        Type        | Modifiers | Storage  | Stats target | Description 
--------+--------------------+-----------+----------+--------------+-------------
 key    | text(0)            |           | extended |              | 
 _0     | double precision   |           | plain    |              | 
 _2     | double precision[] |           | extended |              | 
 _1     | integer            |           | plain    |              | 
Indexes:
    "cqaggexpr2_mrel0_expr_idx" btree (hash_group(key))
Options: fillfactor=50

CREATE CONTINUOUS VIEW cqaggexpr3 AS SELECT key::text, COUNT(*) AS value FROM cont_create_stream2 WHERE arrival_timestamp > (clock_timestamp() - interval '5' second) GROUP BY key;
\d+ cqaggexpr3;
               View "public.cqaggexpr3"
 Column |  Type   | Modifiers | Storage  | Description 
--------+---------+-----------+----------+-------------
 key    | text(0) |           | extended | 
 value  | bigint  |           | plain    | 
View definition:
 SELECT cqaggexpr3_mrel0.key,
    combine(cqaggexpr3_mrel0.2) AS value
   FROM cqaggexpr3_mrel0
  WHERE cqaggexpr3_mrel0._0 > (clock_timestamp() - '@ 5 secs'::interval second)
  GROUP BY cqaggexpr3_mrel0.key;

\d+ cqaggexpr3_mrel0;
                            Table "public.cqaggexpr3_mrel0"
 Column |           Type           | Modifiers | Storage  | Stats target | Description 
--------+--------------------------+-----------+----------+--------------+-------------
 key    | text(0)                  |           | extended |              | 
 value  | bigint                   |           | plain    |              | 
 _0     | timestamp with time zone |           | plain    |              | 
Indexes:
    "cqaggexpr3_mrel0_expr_idx" btree (ls_hash_group(key, _0))
Options: fillfactor=50

CREATE CONTINUOUS VIEW cqaggexpr4 AS SELECT key::text, floor(AVG(x::float)) AS value FROM cont_create_stream2 GROUP BY key;
\d+ cqaggexpr4;
                    View "public.cqaggexpr4"
 Column |       Type       | Modifiers | Storage  | Description 
--------+------------------+-----------+----------+-------------
 key    | text(0)          |           | extended | 
 value  | double precision |           | plain    | 
View definition:
 SELECT cqaggexpr4_mrel0.key,
    floor(cqaggexpr4_mrel0._0) AS value
   FROM cqaggexpr4_mrel0;

\d+ cqaggexpr4_mrel0;
                         Table "public.cqaggexpr4_mrel0"
 Column |        Type        | Modifiers | Storage  | Stats target | Description 
--------+--------------------+-----------+----------+--------------+-------------
 key    | text(0)            |           | extended |              | 
 _0     | double precision   |           | plain    |              | 
 _1     | double precision[] |           | extended |              | 
Indexes:
    "cqaggexpr4_mrel0_expr_idx" btree (hash_group(key))
Options: fillfactor=50

CREATE CONTINUOUS VIEW cqgroupby AS SELECT k0::text, k1::integer, COUNT(*) FROM create_cont_stream1 GROUP BY k0, k1;
\d+ cqgroupby
                View "public.cqgroupby"
 Column |  Type   | Modifiers | Storage  | Description 
--------+---------+-----------+----------+-------------
 k0     | text(0) |           | extended | 
 k1     | integer |           | plain    | 
 count  | bigint  |           | plain    | 
View definition:
 SELECT cqgroupby_mrel0.k0,
    cqgroupby_mrel0.k1,
    cqgroupby_mrel0.count
   FROM cqgroupby_mrel0;

\d+ cqgroupby_mrel0;
                    Table "public.cqgroupby_mrel0"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 k0     | text(0) |           | extended |              | 
 k1     | integer |           | plain    |              | 
 count  | bigint  |           | plain    |              | 
Indexes:
    "cqgroupby_mrel0_expr_idx" btree (hash_group(k0, k1))
Options: fillfactor=50

CREATE CONTINUOUS VIEW multigroupindex AS SELECT a::text, b::int8, c::int4, d::int2, e::float8, COUNT(*) FROM create_cont_stream1
GROUP BY a, b, c, d, e;
\d+ multigroupindex;
                 View "public.multigroupindex"
 Column |       Type       | Modifiers | Storage  | Description 
--------+------------------+-----------+----------+-------------
 a      | text(0)          |           | extended | 
 b      | bigint           |           | plain    | 
 c      | integer          |           | plain    | 
 d      | smallint         |           | plain    | 
 e      | double precision |           | plain    | 
 count  | bigint           |           | plain    | 
View definition:
 SELECT multigroupindex_mrel0.a,
    multigroupindex_mrel0.b,
    multigroupindex_mrel0.c,
    multigroupindex_mrel0.d,
    multigroupindex_mrel0.e,
    multigroupindex_mrel0.count
   FROM multigroupindex_mrel0;

\d+ multigroupindex_mrel0;
                     Table "public.multigroupindex_mrel0"
 Column |       Type       | Modifiers | Storage  | Stats target | Description 
--------+------------------+-----------+----------+--------------+-------------
 a      | text(0)          |           | extended |              | 
 b      | bigint           |           | plain    |              | 
 c      | integer          |           | plain    |              | 
 d      | smallint         |           | plain    |              | 
 e      | double precision |           | plain    |              | 
 count  | bigint           |           | plain    |              | 
Indexes:
    "multigroupindex_mrel0_expr_idx" btree (hash_group(a, b, c, d, e))
Options: fillfactor=50

-- A user-specified fillfactor should override the default
CREATE CONTINUOUS VIEW withff WITH (fillfactor = 42) AS SELECT COUNT(*) FROM stream;
\d+ withff_mrel0;
                    Table "public.withff_mrel0"
 Column |  Type  | Modifiers | Storage | Stats target | Description 
--------+--------+-----------+---------+--------------+-------------
 count  | bigint |           | plain   |              | 
Options: fillfactor=42

-- It shouldn't be possible to DROP a continuous view with DROP VIEW, and vice-versa
CREATE VIEW ccvv AS SELECT * FROM generate_series(1, 10);
DROP CONTINUOUS VIEW ccvv;
ERROR:  "ccvv" is not a continuous view 
HINT:  Use DROP VIEW to remove a view.
DROP VIEW ccvv;
CREATE CONTINUOUS VIEW ccvv AS SELECT COUNT(*) FROM stream;
DROP VIEW ccvv;
ERROR:  "ccvv" is not a view
HINT:  Use DROP CONTINUOUS VIEW to remove a continuous view.
DROP CONTINUOUS VIEW ccvv;
DROP CONTINUOUS VIEW cqcreate0;
DROP CONTINUOUS VIEW cqcreate1;
DROP CONTINUOUS VIEW cqcreate2;
DROP CONTINUOUS VIEW cqcreate3;
DROP CONTINUOUS VIEW cqcreate4;
DROP CONTINUOUS VIEW cqcreate5;
DROP CONTINUOUS VIEW cqcreate6;
DROP CONTINUOUS VIEW cvavg;
DROP CONTINUOUS VIEW cvjson;
DROP CONTINUOUS VIEW cvjsonobj;
DROP CONTINUOUS VIEW cvcount;
DROP CONTINUOUS VIEW cvarray;
DROP CONTINUOUS VIEW cvtext;
DROP CONTINUOUS VIEW cqaggexpr1;
DROP CONTINUOUS VIEW cqaggexpr2;
DROP CONTINUOUS VIEW cqaggexpr3;
DROP CONTINUOUS VIEW cqaggexpr4;
DROP CONTINUOUS VIEW cqgroupby;
DROP CONTINUOUS VIEW multigroupindex;
DROP CONTINUOUS VIEW withff;
