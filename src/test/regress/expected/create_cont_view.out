SET IntervalStyle to postgres;
CREATE STREAM create_cont_stream (key integer, url text, value text);
-- Simple ones
CREATE CONTINUOUS VIEW cqcreate0 AS SELECT key FROM create_cont_stream;
SELECT COUNT(*) FROM pipeline_views() WHERE name = 'cqcreate0';
 count 
-------
     1
(1 row)

\d+ cqcreate0;
          Continuous view "public.cqcreate0"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 key    | integer |           | plain   | 
View definition:
 SELECT key
   FROM ONLY create_cont_stream;

\d+ cqcreate0_mrel;
                    Table "public.cqcreate0_mrel"
 Column |  Type   | Modifiers | Storage | Stats target | Description 
--------+---------+-----------+---------+--------------+-------------
 key    | integer |           | plain   |              | 
 $pk    | bigint  | not null  | plain   |              | 
Indexes:
    "cqcreate0_mrel_pkey" PRIMARY KEY, btree ("$pk")
Options: fillfactor=50

\d+ cqcreate0_osrel;
             Stream "public.cqcreate0_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cqcreate0                | extended
 new               | cqcreate0                | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cqcreate0');
 pipeline_get_overlay_viewdef 
------------------------------
  SELECT cqcreate0_mrel.key  +
    FROM ONLY cqcreate0_mrel;
(1 row)

CREATE CONTINUOUS VIEW cqcreate1 AS SELECT substring(url, 1, 2) FROM create_cont_stream;
SELECT COUNT(*) FROM pipeline_views() WHERE name = 'cqcreate1';
 count 
-------
     1
(1 row)

\d+ cqcreate1;
          Continuous view "public.cqcreate1"
  Column   | Type | Modifiers | Storage  | Description 
-----------+------+-----------+----------+-------------
 substring | text |           | extended | 
View definition:
 SELECT "substring"(url, 1, 2) AS "substring"
   FROM ONLY create_cont_stream;

\d+ cqcreate1_mrel;
                     Table "public.cqcreate1_mrel"
  Column   |  Type  | Modifiers | Storage  | Stats target | Description 
-----------+--------+-----------+----------+--------------+-------------
 substring | text   |           | extended |              | 
 $pk       | bigint | not null  | plain    |              | 
Indexes:
    "cqcreate1_mrel_pkey" PRIMARY KEY, btree ("$pk")
Options: fillfactor=50

\d+ cqcreate1_osrel;
             Stream "public.cqcreate1_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cqcreate1                | extended
 new               | cqcreate1                | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cqcreate1');
    pipeline_get_overlay_viewdef    
------------------------------------
  SELECT cqcreate1_mrel."substring"+
    FROM ONLY cqcreate1_mrel;
(1 row)

CREATE CONTINUOUS VIEW cqcreate2 AS SELECT key, substring(value, 1, 2) AS s FROM create_cont_stream;
SELECT COUNT(*) FROM pipeline_views() WHERE name = 'cqcreate2';
 count 
-------
     1
(1 row)

\d+ cqcreate2;
          Continuous view "public.cqcreate2"
 Column |  Type   | Modifiers | Storage  | Description 
--------+---------+-----------+----------+-------------
 key    | integer |           | plain    | 
 s      | text    |           | extended | 
View definition:
 SELECT key,
    "substring"(value, 1, 2) AS s
   FROM ONLY create_cont_stream;

\d+ cqcreate2_mrel;
                    Table "public.cqcreate2_mrel"
 Column |  Type   | Modifiers | Storage  | Stats target | Description 
--------+---------+-----------+----------+--------------+-------------
 key    | integer |           | plain    |              | 
 s      | text    |           | extended |              | 
 $pk    | bigint  | not null  | plain    |              | 
Indexes:
    "cqcreate2_mrel_pkey" PRIMARY KEY, btree ("$pk")
Options: fillfactor=50

\d+ cqcreate2_osrel;
             Stream "public.cqcreate2_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cqcreate2                | extended
 new               | cqcreate2                | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cqcreate2');
 pipeline_get_overlay_viewdef 
------------------------------
  SELECT cqcreate2_mrel.key, +
     cqcreate2_mrel.s        +
    FROM ONLY cqcreate2_mrel;
(1 row)

DROP STREAM create_cont_stream CASCADE;
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to continuous view cqcreate0
drop cascades to continuous view cqcreate1
drop cascades to continuous view cqcreate2
CREATE STREAM create_cont_stream (key text, value int8, x float8, y int8, z int2, ts0 timestamp, ts1 timestamp);
-- Group by projections
CREATE CONTINUOUS VIEW cqcreate3 AS SELECT key, COUNT(*), SUM(value) FROM create_cont_stream GROUP BY key;
SELECT COUNT(*) FROM pipeline_views() WHERE name = 'cqcreate3';
 count 
-------
     1
(1 row)

\d+ cqcreate3;
          Continuous view "public.cqcreate3"
 Column |  Type   | Modifiers | Storage  | Description 
--------+---------+-----------+----------+-------------
 key    | text    |           | extended | 
 count  | bigint  |           | plain    | 
 sum    | numeric |           | main     | 
View definition:
 SELECT key,
    count(*) AS count,
    sum(value) AS sum
   FROM ONLY create_cont_stream
  GROUP BY key;

\d+ cqcreate3_mrel;
                    Table "public.cqcreate3_mrel"
 Column |  Type  | Modifiers | Storage  | Stats target | Description 
--------+--------+-----------+----------+--------------+-------------
 key    | text   |           | extended |              | 
 count  | bigint |           | plain    |              | 
 sum    | bytea  |           | extended |              | 
 $pk    | bigint | not null  | plain    |              | 
Indexes:
    "cqcreate3_mrel_pkey" PRIMARY KEY, btree ("$pk")
    "cqcreate3_mrel_expr_idx" btree (hash_group(key))
Options: fillfactor=50

\d+ cqcreate3_osrel;
             Stream "public.cqcreate3_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cqcreate3                | extended
 new               | cqcreate3                | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cqcreate3');
                     pipeline_get_overlay_viewdef                     
----------------------------------------------------------------------
  SELECT cqcreate3_mrel.key,                                         +
     cqcreate3_mrel.count,                                           +
     numeric_poly_sum(numpolyaggstaterecv(cqcreate3_mrel.sum)) AS sum+
    FROM ONLY cqcreate3_mrel;
(1 row)

CREATE CONTINUOUS VIEW cqcreate4 AS SELECT COUNT(*), SUM(value) FROM create_cont_stream GROUP BY key;
SELECT COUNT(*) FROM pipeline_views() WHERE name = 'cqcreate4';
 count 
-------
     1
(1 row)

\d+ cqcreate4;
          Continuous view "public.cqcreate4"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 count  | bigint  |           | plain   | 
 sum    | numeric |           | main    | 
View definition:
 SELECT count(*) AS count,
    sum(value) AS sum
   FROM ONLY create_cont_stream
  GROUP BY key;

\d+ cqcreate4_mrel;
                    Table "public.cqcreate4_mrel"
 Column |  Type  | Modifiers | Storage  | Stats target | Description 
--------+--------+-----------+----------+--------------+-------------
 _0     | text   |           | extended |              | 
 count  | bigint |           | plain    |              | 
 sum    | bytea  |           | extended |              | 
 $pk    | bigint | not null  | plain    |              | 
Indexes:
    "cqcreate4_mrel_pkey" PRIMARY KEY, btree ("$pk")
    "cqcreate4_mrel_expr_idx" btree (hash_group(_0))
Options: fillfactor=50

\d+ cqcreate4_osrel;
             Stream "public.cqcreate4_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cqcreate4                | extended
 new               | cqcreate4                | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cqcreate4');
                     pipeline_get_overlay_viewdef                     
----------------------------------------------------------------------
  SELECT cqcreate4_mrel.count,                                       +
     numeric_poly_sum(numpolyaggstaterecv(cqcreate4_mrel.sum)) AS sum+
    FROM ONLY cqcreate4_mrel;
(1 row)

-- Sliding window queries
CREATE CONTINUOUS VIEW cqcreate5 AS SELECT key FROM create_cont_stream WHERE arrival_timestamp > (clock_timestamp() - interval '5 seconds');
SELECT COUNT(*) FROM pipeline_views() WHERE name = 'cqcreate5';
 count 
-------
     1
(1 row)

\d+ cqcreate5;
         Continuous view "public.cqcreate5"
 Column | Type | Modifiers | Storage  | Description 
--------+------+-----------+----------+-------------
 key    | text |           | extended | 
View definition:
 SELECT key
   FROM ONLY create_cont_stream
  WHERE arrival_timestamp > (clock_timestamp() - '00:00:05'::interval);

\d+ cqcreate5_mrel;
                                  Table "public.cqcreate5_mrel"
      Column       |           Type           | Modifiers | Storage  | Stats target | Description 
-------------------+--------------------------+-----------+----------+--------------+-------------
 arrival_timestamp | timestamp with time zone |           | plain    |              | 
 key               | text                     |           | extended |              | 
 $pk               | bigint                   | not null  | plain    |              | 
Indexes:
    "cqcreate5_mrel_pkey" PRIMARY KEY, btree ("$pk")
    "cqcreate5_mrel_arrival_timestamp_idx" btree (arrival_timestamp)
Options: fillfactor=50

\d+ cqcreate5_osrel;
             Stream "public.cqcreate5_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cqcreate5                | extended
 new               | cqcreate5                | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cqcreate5');
                               pipeline_get_overlay_viewdef                               
------------------------------------------------------------------------------------------
  SELECT cqcreate5_mrel.key                                                              +
    FROM ONLY cqcreate5_mrel                                                             +
   WHERE (cqcreate5_mrel.arrival_timestamp > (clock_timestamp() - '00:00:05'::interval));
(1 row)

CREATE CONTINUOUS VIEW cqcreate6 AS SELECT COUNT(*) FROM create_cont_stream WHERE arrival_timestamp > (clock_timestamp() - interval '5 seconds') GROUP BY key::text;
SELECT COUNT(*) FROM pipeline_views() WHERE name = 'cqcreate6';
 count 
-------
     1
(1 row)

\d+ cqcreate6;
         Continuous view "public.cqcreate6"
 Column |  Type  | Modifiers | Storage | Description 
--------+--------+-----------+---------+-------------
 count  | bigint |           | plain   | 
View definition:
 SELECT count(*) AS count
   FROM ONLY create_cont_stream
  WHERE arrival_timestamp > (clock_timestamp() - '00:00:05'::interval)
  GROUP BY key;

\d+ cqcreate6_mrel;
                                  Table "public.cqcreate6_mrel"
      Column       |           Type           | Modifiers | Storage  | Stats target | Description 
-------------------+--------------------------+-----------+----------+--------------+-------------
 arrival_timestamp | timestamp with time zone |           | plain    |              | 
 _0                | text                     |           | extended |              | 
 count             | bigint                   |           | plain    |              | 
 $pk               | bigint                   | not null  | plain    |              | 
Indexes:
    "cqcreate6_mrel_pkey" PRIMARY KEY, btree ("$pk")
    "cqcreate6_mrel_expr_idx" btree (ls_hash_group(arrival_timestamp, _0))
Options: fillfactor=50

\d+ cqcreate6_osrel;
             Stream "public.cqcreate6_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cqcreate6                | extended
 new               | cqcreate6                | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cqcreate6');
                              pipeline_get_overlay_viewdef                               
-----------------------------------------------------------------------------------------
  SELECT combine(cqcreate6_mrel.count) AS count                                         +
    FROM ONLY cqcreate6_mrel                                                            +
   WHERE (cqcreate6_mrel.arrival_timestamp > (clock_timestamp() - '00:00:05'::interval))+
   GROUP BY cqcreate6_mrel._0;
(1 row)

-- These use a combine state column
CREATE CONTINUOUS VIEW cvavg AS SELECT key, AVG(x) AS float_avg, AVG(y) AS int_avg, AVG(ts0 - ts1) AS internal_avg FROM create_cont_stream GROUP BY key;
\d+ cvavg;
                    Continuous view "public.cvavg"
    Column    |       Type       | Modifiers | Storage  | Description 
--------------+------------------+-----------+----------+-------------
 key          | text             |           | extended | 
 float_avg    | double precision |           | plain    | 
 int_avg      | numeric          |           | main     | 
 internal_avg | interval         |           | plain    | 
View definition:
 SELECT key,
    avg(x) AS float_avg,
    avg(y) AS int_avg,
    avg(ts0 - ts1) AS internal_avg
   FROM ONLY create_cont_stream
  GROUP BY key;

\d+ cvavg_mrel;
                               Table "public.cvavg_mrel"
    Column    |        Type        | Modifiers | Storage  | Stats target | Description 
--------------+--------------------+-----------+----------+--------------+-------------
 key          | text               |           | extended |              | 
 float_avg    | double precision[] |           | extended |              | 
 int_avg      | bytea              |           | extended |              | 
 internal_avg | interval[]         |           | extended |              | 
 $pk          | bigint             | not null  | plain    |              | 
Indexes:
    "cvavg_mrel_pkey" PRIMARY KEY, btree ("$pk")
    "cvavg_mrel_expr_idx" btree (hash_group(key))
Options: fillfactor=50

\d+ cvavg_osrel;
               Stream "public.cvavg_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cvavg                    | extended
 new               | cvavg                    | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cvavg');
                       pipeline_get_overlay_viewdef                        
---------------------------------------------------------------------------
  SELECT cvavg_mrel.key,                                                  +
     float8_avg(cvavg_mrel.float_avg) AS float_avg,                       +
     numeric_poly_avg(numpolyaggstaterecv(cvavg_mrel.int_avg)) AS int_avg,+
     interval_avg(cvavg_mrel.internal_avg) AS internal_avg                +
    FROM ONLY cvavg_mrel;
(1 row)

CREATE CONTINUOUS VIEW cvjson AS SELECT json_agg(key) AS count_col FROM create_cont_stream;
\d+ cvjson;
            Continuous view "public.cvjson"
  Column   | Type | Modifiers | Storage  | Description 
-----------+------+-----------+----------+-------------
 count_col | json |           | extended | 
View definition:
 SELECT json_agg(key) AS count_col
   FROM ONLY create_cont_stream;

\d+ cvjson_mrel;
                       Table "public.cvjson_mrel"
  Column   |  Type  | Modifiers | Storage  | Stats target | Description 
-----------+--------+-----------+----------+--------------+-------------
 count_col | bytea  |           | extended |              | 
 $pk       | bigint | not null  | plain    |              | 
Indexes:
    "cvjson_mrel_pkey" PRIMARY KEY, btree ("$pk")
Options: fillfactor=50

\d+ cvjson_osrel;
              Stream "public.cvjson_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cvjson                   | extended
 new               | cvjson                   | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cvjson');
                          pipeline_get_overlay_viewdef                          
--------------------------------------------------------------------------------
  SELECT json_agg_finalfn(jsonaggstaterecv(cvjson_mrel.count_col)) AS count_col+
    FROM ONLY cvjson_mrel;
(1 row)

CREATE CONTINUOUS VIEW cvjsonobj AS SELECT json_object_agg(key, value) FROM create_cont_stream;
\d+ cvjsonobj;
             Continuous view "public.cvjsonobj"
     Column      | Type | Modifiers | Storage  | Description 
-----------------+------+-----------+----------+-------------
 json_object_agg | json |           | extended | 
View definition:
 SELECT json_object_agg(key, value) AS json_object_agg
   FROM ONLY create_cont_stream;

\d+ cvjsonobj_mrel;
                        Table "public.cvjsonobj_mrel"
     Column      |  Type  | Modifiers | Storage  | Stats target | Description 
-----------------+--------+-----------+----------+--------------+-------------
 json_object_agg | bytea  |           | extended |              | 
 $pk             | bigint | not null  | plain    |              | 
Indexes:
    "cvjsonobj_mrel_pkey" PRIMARY KEY, btree ("$pk")
Options: fillfactor=50

\d+ cvjsonobj_osrel;
             Stream "public.cvjsonobj_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cvjsonobj                | extended
 new               | cvjsonobj                | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cvjsonobj');
                                     pipeline_get_overlay_viewdef                                     
------------------------------------------------------------------------------------------------------
  SELECT json_object_agg_finalfn(jsonaggstaterecv(cvjsonobj_mrel.json_object_agg)) AS json_object_agg+
    FROM ONLY cvjsonobj_mrel;
(1 row)

-- But these aggregates don't
CREATE CONTINUOUS VIEW cvcount AS SELECT SUM(z + y) AS sum_col FROM create_cont_stream;
\d+ cvcount;
           Continuous view "public.cvcount"
 Column  |  Type   | Modifiers | Storage | Description 
---------+---------+-----------+---------+-------------
 sum_col | numeric |           | main    | 
View definition:
 SELECT sum(z + y) AS sum_col
   FROM ONLY create_cont_stream;

\d+ cvcount_mrel;
                     Table "public.cvcount_mrel"
 Column  |  Type  | Modifiers | Storage  | Stats target | Description 
---------+--------+-----------+----------+--------------+-------------
 sum_col | bytea  |           | extended |              | 
 $pk     | bigint | not null  | plain    |              | 
Indexes:
    "cvcount_mrel_pkey" PRIMARY KEY, btree ("$pk")
Options: fillfactor=50

\d+ cvcount_osrel;
              Stream "public.cvcount_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cvcount                  | extended
 new               | cvcount                  | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cvcount');
                          pipeline_get_overlay_viewdef                          
--------------------------------------------------------------------------------
  SELECT numeric_poly_sum(numpolyaggstaterecv(cvcount_mrel.sum_col)) AS sum_col+
    FROM ONLY cvcount_mrel;
(1 row)

CREATE CONTINUOUS VIEW cvarray AS SELECT COUNT(*) as count_col FROM create_cont_stream;
\d+ cvarray;
            Continuous view "public.cvarray"
  Column   |  Type  | Modifiers | Storage | Description 
-----------+--------+-----------+---------+-------------
 count_col | bigint |           | plain   | 
View definition:
 SELECT count(*) AS count_col
   FROM ONLY create_cont_stream;

\d+ cvarray_mrel;
                      Table "public.cvarray_mrel"
  Column   |  Type  | Modifiers | Storage | Stats target | Description 
-----------+--------+-----------+---------+--------------+-------------
 count_col | bigint |           | plain   |              | 
 $pk       | bigint | not null  | plain   |              | 
Indexes:
    "cvarray_mrel_pkey" PRIMARY KEY, btree ("$pk")
Options: fillfactor=50

\d+ cvarray_osrel;
              Stream "public.cvarray_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cvarray                  | extended
 new               | cvarray                  | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cvarray');
  pipeline_get_overlay_viewdef  
--------------------------------
  SELECT cvarray_mrel.count_col+
    FROM ONLY cvarray_mrel;
(1 row)

CREATE CONTINUOUS VIEW cvtext AS SELECT key, string_agg(substring(key, 1, 2), ',') FROM create_cont_stream GROUP BY key;
\d+ cvtext;
            Continuous view "public.cvtext"
   Column   | Type | Modifiers | Storage  | Description 
------------+------+-----------+----------+-------------
 key        | text |           | extended | 
 string_agg | text |           | extended | 
View definition:
 SELECT key,
    string_agg("substring"(key, 1, 2), ','::text) AS string_agg
   FROM ONLY create_cont_stream
  GROUP BY key;

\d+ cvtext_mrel;
                       Table "public.cvtext_mrel"
   Column   |  Type  | Modifiers | Storage  | Stats target | Description 
------------+--------+-----------+----------+--------------+-------------
 key        | text   |           | extended |              | 
 string_agg | bytea  |           | extended |              | 
 $pk        | bigint | not null  | plain    |              | 
Indexes:
    "cvtext_mrel_pkey" PRIMARY KEY, btree ("$pk")
    "cvtext_mrel_expr_idx" btree (hash_group(key))
Options: fillfactor=50

\d+ cvtext_osrel;
              Stream "public.cvtext_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cvtext                   | extended
 new               | cvtext                   | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cvtext');
                           pipeline_get_overlay_viewdef                           
----------------------------------------------------------------------------------
  SELECT cvtext_mrel.key,                                                        +
     string_agg_finalfn(stringaggstaterecv(cvtext_mrel.string_agg)) AS string_agg+
    FROM ONLY cvtext_mrel;
(1 row)

-- Check for expressions containing aggregates
CREATE CONTINUOUS VIEW cqaggexpr1 AS SELECT COUNT(*) + SUM(y) FROM create_cont_stream;
\d+ cqaggexpr1;
          Continuous view "public.cqaggexpr1"
  Column  |  Type   | Modifiers | Storage | Description 
----------+---------+-----------+---------+-------------
 ?column? | numeric |           | main    | 
View definition:
 SELECT count(*)::numeric OPERATOR(pg_catalog.+) sum(y)
   FROM ONLY create_cont_stream;

\d+ cqaggexpr1_mrel;
                   Table "public.cqaggexpr1_mrel"
 Column |  Type  | Modifiers | Storage  | Stats target | Description 
--------+--------+-----------+----------+--------------+-------------
 _0     | bigint |           | plain    |              | 
 _1     | bytea  |           | extended |              | 
 $pk    | bigint | not null  | plain    |              | 
Indexes:
    "cqaggexpr1_mrel_pkey" PRIMARY KEY, btree ("$pk")
Options: fillfactor=50

\d+ cqaggexpr1_osrel;
            Stream "public.cqaggexpr1_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cqaggexpr1               | extended
 new               | cqaggexpr1               | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cqaggexpr1');
                                    pipeline_get_overlay_viewdef                                     
-----------------------------------------------------------------------------------------------------
  SELECT ((cqaggexpr1_mrel._0)::numeric + numeric_poly_sum(numpolyaggstaterecv(cqaggexpr1_mrel._1)))+
    FROM ONLY cqaggexpr1_mrel;
(1 row)

CREATE CONTINUOUS VIEW cqaggexpr2 AS SELECT key, AVG(x) + MAX(y) AS value FROM create_cont_stream GROUP BY key;
\d+ cqaggexpr2;
              Continuous view "public.cqaggexpr2"
 Column |       Type       | Modifiers | Storage  | Description 
--------+------------------+-----------+----------+-------------
 key    | text             |           | extended | 
 value  | double precision |           | plain    | 
View definition:
 SELECT key,
    avg(x) OPERATOR(pg_catalog.+) max(y)::double precision AS value
   FROM ONLY create_cont_stream
  GROUP BY key;

\d+ cqaggexpr2_mrel;
                         Table "public.cqaggexpr2_mrel"
 Column |        Type        | Modifiers | Storage  | Stats target | Description 
--------+--------------------+-----------+----------+--------------+-------------
 key    | text               |           | extended |              | 
 _0     | double precision[] |           | extended |              | 
 _1     | bigint             |           | plain    |              | 
 $pk    | bigint             | not null  | plain    |              | 
Indexes:
    "cqaggexpr2_mrel_pkey" PRIMARY KEY, btree ("$pk")
    "cqaggexpr2_mrel_expr_idx" btree (hash_group(key))
Options: fillfactor=50

\d+ cqaggexpr2_osrel;
            Stream "public.cqaggexpr2_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cqaggexpr2               | extended
 new               | cqaggexpr2               | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cqaggexpr2');
                              pipeline_get_overlay_viewdef                              
----------------------------------------------------------------------------------------
  SELECT cqaggexpr2_mrel.key,                                                          +
     (float8_avg(cqaggexpr2_mrel._0) + (cqaggexpr2_mrel._1)::double precision) AS value+
    FROM ONLY cqaggexpr2_mrel;
(1 row)

CREATE CONTINUOUS VIEW cqaggexpr3 AS SELECT key, COUNT(*) AS value FROM create_cont_stream WHERE arrival_timestamp > (clock_timestamp() - interval '5 seconds') GROUP BY key;
\d+ cqaggexpr3;
         Continuous view "public.cqaggexpr3"
 Column |  Type  | Modifiers | Storage  | Description 
--------+--------+-----------+----------+-------------
 key    | text   |           | extended | 
 value  | bigint |           | plain    | 
View definition:
 SELECT key,
    count(*) AS value
   FROM ONLY create_cont_stream
  WHERE arrival_timestamp > (clock_timestamp() - '00:00:05'::interval)
  GROUP BY key;

\d+ cqaggexpr3_mrel;
                                  Table "public.cqaggexpr3_mrel"
      Column       |           Type           | Modifiers | Storage  | Stats target | Description 
-------------------+--------------------------+-----------+----------+--------------+-------------
 arrival_timestamp | timestamp with time zone |           | plain    |              | 
 key               | text                     |           | extended |              | 
 value             | bigint                   |           | plain    |              | 
 $pk               | bigint                   | not null  | plain    |              | 
Indexes:
    "cqaggexpr3_mrel_pkey" PRIMARY KEY, btree ("$pk")
    "cqaggexpr3_mrel_expr_idx" btree (ls_hash_group(arrival_timestamp, key))
Options: fillfactor=50

\d+ cqaggexpr3_osrel;
            Stream "public.cqaggexpr3_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cqaggexpr3               | extended
 new               | cqaggexpr3               | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cqaggexpr3');
                               pipeline_get_overlay_viewdef                               
------------------------------------------------------------------------------------------
  SELECT cqaggexpr3_mrel.key,                                                            +
     combine(cqaggexpr3_mrel.value) AS value                                             +
    FROM ONLY cqaggexpr3_mrel                                                            +
   WHERE (cqaggexpr3_mrel.arrival_timestamp > (clock_timestamp() - '00:00:05'::interval))+
   GROUP BY cqaggexpr3_mrel.key;
(1 row)

CREATE CONTINUOUS VIEW cqaggexpr4 AS SELECT key, floor(AVG(x)) AS value FROM create_cont_stream GROUP BY key;
\d+ cqaggexpr4;
              Continuous view "public.cqaggexpr4"
 Column |       Type       | Modifiers | Storage  | Description 
--------+------------------+-----------+----------+-------------
 key    | text             |           | extended | 
 value  | double precision |           | plain    | 
View definition:
 SELECT key,
    pg_catalog.floor(avg(x)) AS value
   FROM ONLY create_cont_stream
  GROUP BY key;

\d+ cqaggexpr4_mrel;
                         Table "public.cqaggexpr4_mrel"
 Column |        Type        | Modifiers | Storage  | Stats target | Description 
--------+--------------------+-----------+----------+--------------+-------------
 key    | text               |           | extended |              | 
 _0     | double precision[] |           | extended |              | 
 $pk    | bigint             | not null  | plain    |              | 
Indexes:
    "cqaggexpr4_mrel_pkey" PRIMARY KEY, btree ("$pk")
    "cqaggexpr4_mrel_expr_idx" btree (hash_group(key))
Options: fillfactor=50

\d+ cqaggexpr4_osrel;
            Stream "public.cqaggexpr4_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cqaggexpr4               | extended
 new               | cqaggexpr4               | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cqaggexpr4');
            pipeline_get_overlay_viewdef            
----------------------------------------------------
  SELECT cqaggexpr4_mrel.key,                      +
     floor(float8_avg(cqaggexpr4_mrel._0)) AS value+
    FROM ONLY cqaggexpr4_mrel;
(1 row)

CREATE CONTINUOUS VIEW cqgroupby AS SELECT key, x, COUNT(*) FROM create_cont_stream GROUP BY key, x;
\d+ cqgroupby
               Continuous view "public.cqgroupby"
 Column |       Type       | Modifiers | Storage  | Description 
--------+------------------+-----------+----------+-------------
 key    | text             |           | extended | 
 x      | double precision |           | plain    | 
 count  | bigint           |           | plain    | 
View definition:
 SELECT key,
    x,
    count(*) AS count
   FROM ONLY create_cont_stream
  GROUP BY key, x;

\d+ cqgroupby_mrel;
                         Table "public.cqgroupby_mrel"
 Column |       Type       | Modifiers | Storage  | Stats target | Description 
--------+------------------+-----------+----------+--------------+-------------
 key    | text             |           | extended |              | 
 x      | double precision |           | plain    |              | 
 count  | bigint           |           | plain    |              | 
 $pk    | bigint           | not null  | plain    |              | 
Indexes:
    "cqgroupby_mrel_pkey" PRIMARY KEY, btree ("$pk")
    "cqgroupby_mrel_expr_idx" btree (hash_group(key, x))
Options: fillfactor=50

\d+ cqgroupby_osrel;
             Stream "public.cqgroupby_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | cqgroupby                | extended
 new               | cqgroupby                | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('cqgroupby');
 pipeline_get_overlay_viewdef 
------------------------------
  SELECT cqgroupby_mrel.key, +
     cqgroupby_mrel.x,       +
     cqgroupby_mrel.count    +
    FROM ONLY cqgroupby_mrel;
(1 row)

CREATE CONTINUOUS VIEW multigroupindex AS SELECT key, x, y, z, value, COUNT(*) FROM create_cont_stream
GROUP BY key, x, y, z, value;
\d+ multigroupindex;
            Continuous view "public.multigroupindex"
 Column |       Type       | Modifiers | Storage  | Description 
--------+------------------+-----------+----------+-------------
 key    | text             |           | extended | 
 x      | double precision |           | plain    | 
 y      | bigint           |           | plain    | 
 z      | smallint         |           | plain    | 
 value  | bigint           |           | plain    | 
 count  | bigint           |           | plain    | 
View definition:
 SELECT key,
    x,
    y,
    z,
    value,
    count(*) AS count
   FROM ONLY create_cont_stream
  GROUP BY key, x, y, z, value;

\d+ multigroupindex_mrel;
                      Table "public.multigroupindex_mrel"
 Column |       Type       | Modifiers | Storage  | Stats target | Description 
--------+------------------+-----------+----------+--------------+-------------
 key    | text             |           | extended |              | 
 x      | double precision |           | plain    |              | 
 y      | bigint           |           | plain    |              | 
 z      | smallint         |           | plain    |              | 
 value  | bigint           |           | plain    |              | 
 count  | bigint           |           | plain    |              | 
 $pk    | bigint           | not null  | plain    |              | 
Indexes:
    "multigroupindex_mrel_pkey" PRIMARY KEY, btree ("$pk")
    "multigroupindex_mrel_expr_idx" btree (hash_group(key, x, y, z, value))
Options: fillfactor=50

\d+ multigroupindex_osrel;
          Stream "public.multigroupindex_osrel"
      Column       |           Type           | Storage  
-------------------+--------------------------+----------
 old               | multigroupindex          | extended
 new               | multigroupindex          | extended
 arrival_timestamp | timestamp with time zone | plain

SELECT pipeline_get_overlay_viewdef('multigroupindex');
    pipeline_get_overlay_viewdef    
------------------------------------
  SELECT multigroupindex_mrel.key, +
     multigroupindex_mrel.x,       +
     multigroupindex_mrel.y,       +
     multigroupindex_mrel.z,       +
     multigroupindex_mrel.value,   +
     multigroupindex_mrel.count    +
    FROM ONLY multigroupindex_mrel;
(1 row)

DROP STREAM create_cont_stream CASCADE;
NOTICE:  drop cascades to 16 other objects
DETAIL:  drop cascades to continuous view cqcreate3
drop cascades to continuous view cqcreate4
drop cascades to continuous view cqcreate5
drop cascades to continuous view cqcreate6
drop cascades to continuous view cvavg
drop cascades to continuous view cvjson
drop cascades to continuous view cvjsonobj
drop cascades to continuous view cvcount
drop cascades to continuous view cvarray
drop cascades to continuous view cvtext
drop cascades to continuous view cqaggexpr1
drop cascades to continuous view cqaggexpr2
drop cascades to continuous view cqaggexpr3
drop cascades to continuous view cqaggexpr4
drop cascades to continuous view cqgroupby
drop cascades to continuous view multigroupindex
CREATE STREAM create_cont_stream (x int, y int);
-- A user-specified fillfactor should override the default
CREATE CONTINUOUS VIEW withff WITH (fillfactor = 42) AS SELECT COUNT(*) FROM create_cont_stream;
\d+ withff_mrel;
                     Table "public.withff_mrel"
 Column |  Type  | Modifiers | Storage | Stats target | Description 
--------+--------+-----------+---------+--------------+-------------
 count  | bigint |           | plain   |              | 
 $pk    | bigint | not null  | plain   |              | 
Indexes:
    "withff_mrel_pkey" PRIMARY KEY, btree ("$pk")
Options: fillfactor=42

-- It shouldn't be possible to DROP a continuous view with DROP VIEW, and vice-versa
CREATE VIEW ccvv AS SELECT * FROM generate_series(1, 10);
DROP CONTINUOUS VIEW ccvv;
ERROR:  "ccvv" is not a continuous view 
HINT:  Use DROP VIEW to remove a view.
DROP VIEW ccvv;
CREATE CONTINUOUS VIEW ccvv AS SELECT COUNT(*) FROM create_cont_stream;
DROP VIEW ccvv;
ERROR:  "ccvv" is not a view
HINT:  Use DROP CONTINUOUS VIEW to remove a continuous view.
DROP CONTINUOUS VIEW ccvv;
-- Subselects aren't allowed in a CV's target list
CREATE TABLE ccvt (x integer);
CREATE CONTINUOUS VIEW noss AS SELECT y, (SELECT x FROM ccvt WHERE x = 1) FROM create_cont_stream;
ERROR:  subqueries are not allowed in a continuous view's target list
HINT:  Stream-table joins are the preferred method for combining other relations with continuous views.
DROP TABLE ccvt;
-- arrival_timestamp is reserved
CREATE CONTINUOUS VIEW arrts AS SELECT x AS arrival_timestamp FROM create_cont_stream;
ERROR:  arrival_timestamp is a reserved column name
CREATE CONTINUOUS VIEW arrts AS SELECT arrival_timestamp AS arrival_timestamp FROM create_cont_stream;
DROP CONTINUOUS VIEW arrts;
-- WITH max_age
CREATE CONTINUOUS VIEW ma0 WITH (max_age = '1 day') AS SELECT COUNT(*) FROM create_cont_stream;
\d+ ma0;
            Continuous view "public.ma0"
 Column |  Type  | Modifiers | Storage | Description 
--------+--------+-----------+---------+-------------
 count  | bigint |           | plain   | 
View definition:
 SELECT count(*) AS count
   FROM ONLY create_cont_stream
  WHERE arrival_timestamp > (clock_timestamp() - '1 day'::interval);

CREATE VIEW ma1 WITH (max_age = '10 hours') AS SELECT COUNT(*) FROM ma0;
\d+ ma1;
                  View "public.ma1"
 Column |  Type  | Modifiers | Storage | Description 
--------+--------+-----------+---------+-------------
 count  | bigint |           | plain   | 
View definition:
 SELECT count(*) AS count
   FROM ma0
  WHERE arrival_timestamp > (clock_timestamp() - '10:00:00'::interval);

-- max_age must be a valid interval string
CREATE CONTINUOUS VIEW mainvalid WITH (max_age = 42) AS SELECT COUNT(*) FROM create_cont_stream;
ERROR:  "max_age" must be a valid interval string
HINT:  For example, ... WITH (max_age = '1 hour') ...
CREATE CONTINUOUS VIEW mainvalid WITH (max_age = 42.1) AS SELECT COUNT(*) FROM create_cont_stream;
ERROR:  "max_age" must be a valid interval string
HINT:  For example, ... WITH (max_age = '1 hour') ...
CREATE CONTINUOUS VIEW mainvalid WITH (max_age = 'not an interval') AS SELECT COUNT(*) FROM create_cont_stream;
ERROR:  invalid input syntax for type interval: "not an interval"
LINE 1: CREATE CONTINUOUS VIEW mainvalid WITH (max_age = 'not an int...
        ^
CREATE CONTINUOUS VIEW mawhere WITH (max_age = '1 day') AS SELECT COUNT(*) FROM create_cont_stream
WHERE x::integer = 1;
\d+ mawhere;
          Continuous view "public.mawhere"
 Column |  Type  | Modifiers | Storage | Description 
--------+--------+-----------+---------+-------------
 count  | bigint |           | plain   | 
View definition:
 SELECT count(*) AS count
   FROM ONLY create_cont_stream
  WHERE arrival_timestamp > (clock_timestamp() - '1 day'::interval) AND x = 1;

DROP CONTINUOUS VIEW mawhere;
-- max_age can't be used on non-sliding window continuous views
CREATE VIEW manosw WITH (max_age = '1 day') AS SELECT COUNT(*) FROM withff;
ERROR:  "max_age" can only be specified when reading from a stream or continuous view
-- or in conjunction with another sliding-window predicate
CREATE VIEW manosw WITH (max_age = '1 day') AS SELECT COUNT(*) FROM create_cont_stream
WHERE arrival_timestamp > clock_timestamp() - interval '1 day';
ERROR:  cannot specify both "max_age" and a sliding window expression in the WHERE clause
DROP STREAM create_cont_stream CASCADE;
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to continuous view withff
drop cascades to continuous view ma0
drop cascades to view ma1
-- Custom type
CREATE TYPE custom_type AS (integerone integer, integertwo integer);
CREATE STREAM create_cont_stream(val custom_type, x float8);
CREATE CONTINUOUS VIEW type_cv as SELECT val, count(*) FROM create_cont_stream GROUP BY val;
ERROR:  each grouping column type must be associated with an operator class
HINT:  Define an operator class using CREATE OPERATOR CLASS.
CREATE CONTINUOUS VIEW tts AS SELECT COUNT(*) FROM create_cont_stream WHERE to_timestamp(x) > clock_timestamp() - interval '3 months';
DROP STREAM create_cont_stream CASCADE;
NOTICE:  drop cascades to continuous view tts
