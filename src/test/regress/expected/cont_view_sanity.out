DROP SERVER pipeline_streams;
ERROR:  server "pipeline_streams" does not exist
DROP FOREIGN DATA WRAPPER stream_fdw;
ERROR:  cannot drop foreign-data wrapper stream_fdw because it is required by the database system
CREATE STREAM sanity_stream (key text, value float8, x int, y int, z int, a int, b int, k text, v int);
CREATE CONTINUOUS VIEW test_avg AS SELECT key, avg(value) FROM sanity_stream GROUP BY key;
INSERT INTO sanity_stream (key, value) VALUES ('x', 1), ('x', 2), ('y', 100);
SELECT * FROM test_avg ORDER BY key;
 key | avg 
-----+-----
 x   | 1.5
 y   | 100
(2 rows)

SELECT key, avg FROM test_avg_mrel ORDER BY key;
 key |      avg      
-----+---------------
 x   | {2,3,5}
 y   | {1,100,10000}
(2 rows)

INSERT INTO sanity_stream (key, value) VALUES ('x', 10), ('x', 20), ('y', 200);
SELECT * FROM test_avg ORDER BY key;
 key | avg  
-----+------
 x   | 8.25
 y   |  150
(2 rows)

SELECT key, avg FROM test_avg_mrel ORDER BY key;
 key |      avg      
-----+---------------
 x   | {4,33,505}
 y   | {2,300,50000}
(2 rows)

CREATE CONTINUOUS VIEW cv AS SELECT key, COUNT(*), MAX(x + y) FROM sanity_stream GROUP BY key;
INSERT INTO sanity_stream (key, x, y) VALUES ('x', -1000, 1000), ('x', 0, 1), ('x', 1, 0);
INSERT INTO sanity_stream (key, x, y) VALUES ('y', 10, 20), ('y', 20, 30), ('y', 1, 200), ('y', 1, 200), ('y', 1, 200);
INSERT INTO sanity_stream (key, x, y) VALUES ('z', -1000, 1001);
SELECT * FROM cv ORDER BY key;
 key | count | max 
-----+-------+-----
 x   |     3 |   1
 y   |     5 | 201
 z   |     1 |   1
(3 rows)

CREATE CONTINUOUS VIEW cv_weird_tl AS SELECT COUNT(*), key, SUM(value) FROM sanity_stream GROUP BY key;
INSERT INTO sanity_stream (key, value) VALUES ('x', 10), ('x', 20), ('y', 200);
SELECT * FROM cv_weird_tl ORDER BY key;
 count | key | sum 
-------+-----+-----
     2 | x   |  30
     1 | y   | 200
(2 rows)

CREATE CONTINUOUS VIEW cv_no_grp AS SELECT COUNT(*), SUM(value) FROM sanity_stream;
INSERT INTO sanity_stream (key, value) VALUES ('x', 10), ('x', 20), ('y', 200);
SELECT * FROM cv_no_grp;
 count | sum 
-------+-----
     3 | 230
(1 row)

CREATE CONTINUOUS VIEW cv_grp_expr AS SELECT COUNT(*), substring(key, 1, 2) AS s FROM sanity_stream GROUP BY s;
INSERT INTO sanity_stream (key) VALUES ('aab'), ('aba'), ('aaa'), ('cab');
SELECT * FROM cv_grp_expr ORDER BY s;
 count | s  
-------+----
     2 | aa
     1 | ab
     1 | ca
(3 rows)

CREATE CONTINUOUS VIEW cv_multi_grp AS SELECT a, b, COUNT(*) FROM sanity_stream GROUP BY a, b;
INSERT INTO sanity_stream (a, b) VALUES (1, 1), (1, 1), (1, 2), (2, 2), (2, 1);
SELECT * FROM cv_multi_grp ORDER BY a, b;
 a | b | count 
---+---+-------
 1 | 1 |     2
 1 | 2 |     1
 2 | 1 |     1
 2 | 2 |     1
(4 rows)

CREATE CONTINUOUS VIEW cv_agg_expr AS SELECT k, COUNT(*) + SUM(v) FROM sanity_stream GROUP BY k;
INSERT INTO sanity_stream (k, v) VALUES ('a', 1), ('a', 2), ('a', 3), ('b', 4), ('b', 5);
SELECT * FROM cv_agg_expr ORDER BY k;
 k | ?column? 
---+----------
 a |        9
 b |       11
(2 rows)

INSERT INTO sanity_stream (k, v) VALUES ('a', 1), ('a', 2), ('b', 3);
SELECT * FROM cv_agg_expr ORDER BY k;
 k | ?column? 
---+----------
 a |       14
 b |       15
(2 rows)

CREATE CONTINUOUS VIEW test_null_group AS SELECT x, y FROM sanity_stream GROUP BY x, y;
INSERT INTO sanity_stream (z) VALUES (1);
INSERT INTO sanity_stream (z) VALUES (1);
INSERT INTO sanity_stream (x) VALUES (1);
INSERT INTO sanity_stream (x) VALUES (1);
INSERT INTO sanity_stream (y) VALUES (1);
INSERT INTO sanity_stream (y) VALUES (1);
SELECT * FROM test_null_group;
 x | y 
---+---
   |  
 1 |  
   | 1
(3 rows)

DROP STREAM sanity_stream CASCADE;
NOTICE:  drop cascades to 8 other objects
DETAIL:  drop cascades to continuous view test_avg
drop cascades to continuous view cv
drop cascades to continuous view cv_weird_tl
drop cascades to continuous view cv_no_grp
drop cascades to continuous view cv_grp_expr
drop cascades to continuous view cv_multi_grp
drop cascades to continuous view cv_agg_expr
drop cascades to continuous view test_null_group
-- Verify that transout/combinein functions are strict
SELECT proname FROM
  (SELECT DISTINCT transoutfn::text FROM pipeline_combine) c
JOIN pg_proc p ON c.transoutfn::text = p.proname
WHERE proisstrict = false;
 proname 
---------
(0 rows)

SELECT proname FROM
  (SELECT DISTINCT combineinfn::text FROM pipeline_combine) c
JOIN pg_proc p ON c.combineinfn::text = p.proname
WHERE proisstrict = false;
 proname 
---------
(0 rows)

