-------------------------------------------------------------------------------
-- Integer averages
CREATE STREAM int_stream_cqavg (k text, v int8);
CREATE CONTINUOUS VIEW test_int8_avg AS SELECT k::text, AVG(v::int8) FROM int_stream_cqavg GROUP BY k;
CREATE CONTINUOUS VIEW test_int4_avg AS SELECT k::text, AVG(v::int4) FROM int_stream_cqavg GROUP BY k;
CREATE CONTINUOUS VIEW test_int2_avg AS SELECT k::text, AVG(v::int2) FROM int_stream_cqavg GROUP BY k;
INSERT INTO int_stream_cqavg (k, v) VALUES ('x', 1), ('x', 1), ('x', 1);
INSERT INTO int_stream_cqavg (k, v) VALUES ('y', -10000), ('y', 10000), ('y', 0);
SELECT * FROM test_int4_avg_mrel ORDER BY k;
 k |  avg  | $pk 
---+-------+-----
 x | {3,3} |   1
 y | {3,0} |   2
(2 rows)

SELECT * FROM test_int2_avg_mrel ORDER BY k;
 k |  avg  | $pk 
---+-------+-----
 x | {3,3} |   1
 y | {3,0} |   2
(2 rows)

INSERT INTO int_stream_cqavg (k, v) VALUES ('x', 2), ('x', 2), ('x', 2);
INSERT INTO int_stream_cqavg (k, v) VALUES ('y', 1), ('y', 10000), ('y', 2000);
SELECT * FROM test_int8_avg ORDER BY k;
 k |          avg          
---+-----------------------
 x |    1.5000000000000000
 y | 2000.1666666666666667
(2 rows)

SELECT * FROM test_int4_avg ORDER BY k;
 k |          avg          
---+-----------------------
 x |    1.5000000000000000
 y | 2000.1666666666666667
(2 rows)

SELECT * FROM test_int2_avg ORDER BY k;
 k |          avg          
---+-----------------------
 x |    1.5000000000000000
 y | 2000.1666666666666667
(2 rows)

DROP STREAM int_stream_cqavg CASCADE;
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to view test_int8_avg
drop cascades to view test_int4_avg
drop cascades to view test_int2_avg
-------------------------------------------------------------------------------
-- Float averages
CREATE STREAM float_stream_cqavg (k text, v float8);
CREATE CONTINUOUS VIEW test_float8_avg AS SELECT k::text, AVG(v::float8) FROM float_stream_cqavg GROUP BY k;
CREATE CONTINUOUS VIEW test_float4_avg AS SELECT k::text, AVG(v::float4) FROM float_stream_cqavg GROUP BY k;
INSERT INTO float_stream_cqavg (k, v) VALUES ('x', 1e6), ('x', -1e6), ('x', 10.0000001);
INSERT INTO float_stream_cqavg (k, v) VALUES ('y', 0.0001), ('y', 0.00002), ('y', 155321233.1);
SELECT k, round(avg::numeric, 5) FROM test_float8_avg ORDER BY k;
 k |     round      
---+----------------
 x |        3.33333
 y | 51773744.36671
(2 rows)

SELECT k, round(avg::numeric, 5) FROM test_float4_avg ORDER BY k;
 k |     round      
---+----------------
 x |        3.33333
 y | 51773744.00004
(2 rows)

INSERT INTO float_stream_cqavg (k, v) VALUES ('x', -1e5), ('x', 1e6), ('x', -10.0000001);
INSERT INTO float_stream_cqavg (k, v) VALUES ('z', 42.42);
SELECT k, round(avg::numeric, 5) FROM test_float8_avg ORDER BY k;
 k |     round      
---+----------------
 x |   150000.00000
 y | 51773744.36671
 z |       42.42000
(3 rows)

SELECT k, round(avg::numeric, 5) FROM test_float4_avg ORDER BY k;
 k |     round      
---+----------------
 x |   150000.00000
 y | 51773744.00004
 z |       42.42000
(3 rows)

DROP STREAM float_stream_cqavg CASCADE;
NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to view test_float8_avg
drop cascades to view test_float4_avg
-------------------------------------------------------------------------------
-- Numeric averages
CREATE STREAM numeric_stream_cqavg (k text, v numeric);
CREATE CONTINUOUS VIEW test_numeric_avg AS SELECT k::text, AVG(v::numeric) FROM numeric_stream_cqavg GROUP BY k;
INSERT INTO numeric_stream_cqavg (k, v) VALUES ('x', 10000000000000000.233), ('x', -1.000000000333), ('x', 0.00000000001);
INSERT INTO numeric_stream_cqavg (k, v) VALUES ('y', 0.1001), ('y', 0.99999999), ('y', -999999999999999999.999999999999);
INSERT INTO numeric_stream_cqavg (k, v) VALUES ('x', 1), ('y', 2), ('z', 42.42);
SELECT * FROM test_numeric_avg ORDER BY k;
 k |               avg                
---+----------------------------------
 x |    2500000000000000.058249999919
 y | -249999999999999999.224975002500
 z |              42.4200000000000000
(3 rows)

DROP STREAM numeric_stream_cqavg CASCADE;
NOTICE:  drop cascades to view test_numeric_avg
-------------------------------------------------------------------------------
-- Interval averages
CREATE STREAM interval_stream_cqavg (k text, ts0 timestamp, ts1 timestamp);
CREATE CONTINUOUS VIEW test_interval_avg AS SELECT k::text, AVG(date_trunc('day', ts1::timestamp) - date_trunc('day', ts0::timestamp)) FROM interval_stream_cqavg GROUP BY k;
INSERT INTO interval_stream_cqavg (k, ts0, ts1) VALUES ('x', '2014-01-01 00:00:00', '2014-01-02 23:00:00');
INSERT INTO interval_stream_cqavg (k, ts0, ts1) VALUES ('x', '2014-01-01 00:00:00', '2014-01-02 01:00:00');
INSERT INTO interval_stream_cqavg (k, ts0, ts1) VALUES ('x', '2014-01-01 00:00:00', '2014-01-02 11:00:00');
-- We truncated down to day, so the hours shouldn't have affected the averages
SELECT * FROM test_interval_avg_mrel ORDER BY k;
 k |              avg               | $pk 
---+--------------------------------+-----
 x | {"@ 3 days","@ 0.000003 secs"} |   1
(1 row)

INSERT INTO interval_stream_cqavg (k, ts0, ts1) VALUES ('x', '2014-01-01 00:00:00', '2014-01-04 04:00:00');
INSERT INTO interval_stream_cqavg (k, ts0, ts1) VALUES ('y', '2014-01-01 23:00:00', '2014-01-02 00:00:00');
SELECT * FROM test_interval_avg ORDER BY k;
 k |       avg        
---+------------------
 x | @ 1 day 12 hours
 y | @ 1 day
(2 rows)

DROP STREAM interval_stream_cqavg CASCADE;
NOTICE:  drop cascades to view test_interval_avg
