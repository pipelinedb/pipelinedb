CREATE SCHEMA test_stream_insert_subselect;
SET search_path TO test_stream_insert_subselect,public;
CREATE TABLE t (x integer);
INSERT INTO t (SELECT generate_series(1, 100));
CREATE CONTINUOUS VIEW v0 AS SELECT x::integer FROM stream;
INSERT INTO stream (x) (SELECT * FROM t);
INSERT INTO stream (x) (SELECT * FROM (SELECT x AS y FROM t) s0);
SELECT COUNT(DISTINCT x) FROM v0;
 count 
-------
   100
(1 row)

CREATE CONTINUOUS VIEW v1 AS SELECT x::integer, COUNT(*) FROM stream GROUP BY x;
INSERT INTO stream (x) (SELECT generate_series(1, 1000));
SELECT COUNT(DISTINCT x) FROM v1;
 count 
-------
  1000
(1 row)

-- It's not possible to SELECT from another stream in a stream INSERT
CREATE STREAM s0 (x integer);
INSERT INTO stream (x) (SELECT x FROM s0);
ERROR:  "s0" is a stream
HINT:  Streams can only be read by a continuous view's FROM clause.
CREATE CONTINUOUS VIEW v2 AS SELECT x::integer FROM stream;
INSERT INTO stream (x) (SELECT generate_series(1, 1000) AS x ORDER BY random());
SELECT COUNT(DISTINCT x) FROM v2;
 count 
-------
  1000
(1 row)

CREATE CONTINUOUS VIEW v3 AS SELECT x::integer FROM stream;
INSERT INTO stream (x) (SELECT * FROM t WHERE x IN (SELECT generate_series(1, 20)));
SELECT * FROM v3 ORDER BY x;
 x  
----
  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
(20 rows)

CREATE CONTINUOUS VIEW v4 AS SELECT COUNT(*) FROM stream;
INSERT INTO stream (price, t) SELECT 10 + random() AS price, current_timestamp - interval '1 minute' * random() AS t FROM generate_series(1, 1000);
SELECT * FROM v4;
 count 
-------
  1000
(1 row)

DROP SCHEMA test_stream_insert_subselect CASCADE;
NOTICE:  drop cascades to 7 other objects
DETAIL:  drop cascades to table t
drop cascades to view v0
drop cascades to view v1
drop cascades to type s0
drop cascades to view v2
drop cascades to view v3
drop cascades to view v4
