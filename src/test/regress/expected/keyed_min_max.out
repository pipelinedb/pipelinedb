SELECT keyed_min(x, -x) FROM generate_series(1, 1000) AS x;
 keyed_min 
-----------
        -1
(1 row)

SELECT keyed_min(-x::float, x::int8) FROM generate_series(1, 1000) AS x;
 keyed_min 
-----------
      1000
(1 row)

SELECT keyed_min(x::numeric, x * 100) FROM generate_series(1, 1000) AS x;
 keyed_min 
-----------
       100
(1 row)

SELECT keyed_min('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'::text, x + 1) FROM generate_series(1, 1000) AS x;
 keyed_min 
-----------
      1001
(1 row)

SELECT keyed_min(-x, 'xxxxxxxxxxxxxxxxxxxxxxxxxx'::text) FROM generate_series(1, 1000) AS x;
         keyed_min          
----------------------------
 xxxxxxxxxxxxxxxxxxxxxxxxxx
(1 row)

SELECT keyed_min('xxxxxxxxxxxxxxxxxxxxxxxxxxx'::text, 'yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy'::text) FROM generate_series(1, 1000) AS x;
                               keyed_min                               
-----------------------------------------------------------------------
 yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
(1 row)

SELECT keyed_min(x, 'yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy') FROM
	(SELECT CASE WHEN x < 10 THEN NULL ELSE x END AS x FROM generate_series(1, 1000) AS x) _;
                               keyed_min                               
-----------------------------------------------------------------------
 yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
(1 row)

SELECT keyed_min(x, NULL::text) FROM generate_series(1, 1000) AS x;
 keyed_min 
-----------
 
(1 row)

SELECT keyed_min(NULL::text, x) FROM generate_series(1, 1000) AS x;
 keyed_min 
-----------
         1
(1 row)

SELECT keyed_min(NULL::integer, NULL::integer) FROM generate_series(1, 1000) AS x;
 keyed_min 
-----------
          
(1 row)

SELECT keyed_max(x, -x) FROM generate_series(1, 1000) AS x;
 keyed_max 
-----------
     -1000
(1 row)

SELECT keyed_max(x::float, x::int8) FROM generate_series(1, 1000) AS x;
 keyed_max 
-----------
      1000
(1 row)

SELECT keyed_max(x::numeric, x * 100) FROM generate_series(1, 1000) AS x;
 keyed_max 
-----------
    100000
(1 row)

SELECT keyed_max('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'::text, x + 1) FROM generate_series(1, 1000) AS x;
 keyed_max 
-----------
      1001
(1 row)

SELECT keyed_max(x, 'xxxxxxxxxxxxxxxxxxxxxxxxxx'::text) FROM generate_series(1, 1000) AS x;
         keyed_max          
----------------------------
 xxxxxxxxxxxxxxxxxxxxxxxxxx
(1 row)

SELECT keyed_max('xxxxxxxxxxxxxxxxxxxxxxxxxxx'::text, 'yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy'::text) FROM generate_series(1, 1000) AS x;
                               keyed_max                               
-----------------------------------------------------------------------
 yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
(1 row)

SELECT keyed_max(x::text, y::text) FROM
	(SELECT CASE WHEN x < 10 THEN NULL ELSE x END AS x, 42 AS y FROM generate_series(1, 1000) AS x) _;
 keyed_max 
-----------
 42
(1 row)

SELECT keyed_max(x, NULL::integer) FROM generate_series(1, 1000) AS x;
 keyed_max 
-----------
          
(1 row)

SELECT keyed_max(NULL::text, x) FROM generate_series(1, 1000) AS x;
 keyed_max 
-----------
         1
(1 row)

SELECT keyed_max(NULL::float8, NULL::float8) FROM generate_series(1, 1000) AS x;
 keyed_max 
-----------
          
(1 row)

SELECT keyed_max('192.168.0.1'::inet, -x) FROM generate_series(1, 1000) AS x;
 keyed_max 
-----------
     -1000
(1 row)

CREATE STREAM keyed_min_max_stream (x int, y numeric, z text, t text);
CREATE CONTINUOUS VIEW keyed_min_max0 AS
	SELECT x::integer % 10 AS g, keyed_min(x, y::numeric), keyed_max(x, y),
		 keyed_min(z::text, substring(t::text, 1, 2)) AS keyed_min_text
FROM keyed_min_max_stream GROUP BY g;
INSERT INTO keyed_min_max_stream (x, y, z, t) SELECT x, -x AS y, x AS z, x + 1 AS t FROM generate_series(201, 300) AS x;
INSERT INTO keyed_min_max_stream (x, y, z, t) SELECT x, -x AS y, x AS z, x + 1 AS t FROM generate_series(1, 100) AS x;
INSERT INTO keyed_min_max_stream (x, y, z, t) SELECT x, -x AS y, x AS z, x + 1 AS t FROM generate_series(101, 200) AS x;
SELECT * FROM keyed_min_max0 ORDER BY g;
 g | keyed_min | keyed_max | keyed_min_text 
---+-----------+-----------+----------------
 0 |       -10 |      -300 | 11
 1 |        -1 |      -291 | 2
 2 |        -2 |      -292 | 10
 3 |        -3 |      -293 | 10
 4 |        -4 |      -294 | 10
 5 |        -5 |      -295 | 10
 6 |        -6 |      -296 | 10
 7 |        -7 |      -297 | 10
 8 |        -8 |      -298 | 10
 9 |        -9 |      -299 | 11
(10 rows)

DROP CONTINUOUS VIEW keyed_min_max0;
DROP STREAM keyed_min_max_stream CASCADE;
CREATE STREAM keyed_min_max_stream (ts timestamptz, x text);
CREATE CONTINUOUS VIEW keyed_min_max1 AS
	SELECT keyed_min(ts::timestamptz, x::text) AS first_value, keyed_max(ts, x) AS last_value
FROM keyed_min_max_stream;
INSERT INTO keyed_min_max_stream (ts, x) VALUES ('2015-10-31 00:01:00', '10000000000000000'); -- First
INSERT INTO keyed_min_max_stream (ts, x) VALUES ('2015-10-31 00:03:00', '2000000000000000');
INSERT INTO keyed_min_max_stream (ts, x) VALUES ('2015-10-31 00:04:00', '300000000000000');
INSERT INTO keyed_min_max_stream (ts, x) VALUES ('2015-10-31 00:02:00', '40000000000000');
INSERT INTO keyed_min_max_stream (ts, x) VALUES ('2015-10-31 00:06:00', '5000000000000'); -- Last
INSERT INTO keyed_min_max_stream (ts, x) VALUES ('2015-10-31 00:05:00', '600000000000');
SELECT * FROM keyed_min_max1;
    first_value    |  last_value   
-------------------+---------------
 10000000000000000 | 5000000000000
(1 row)

DROP CONTINUOUS VIEW keyed_min_max1;
DROP STREAM keyed_min_max_stream CASCADE;
-- #1797
CREATE STREAM keyed_min_max_stream (ticketid text, val int, status int);
CREATE CONTINUOUS VIEW keyed_min_max2 AS
  SELECT
    ticketid,
    min(val) as v0,
   keyed_min(val, status) as v0_status
  FROM keyed_min_max_stream
  GROUP BY ticketid;
CREATE CONTINUOUS VIEW keyed_min_max3 AS
  SELECT
    (new).ticketid,
    (old).v0 as oldV0,
    (new).v0 as newV0
  FROM output_of('keyed_min_max2');
INSERT INTO keyed_min_max_stream (ticketid, val, status) VALUES ('t1', 124, 1);
SELECT pg_sleep(0.1);
 pg_sleep 
----------
 
(1 row)

INSERT INTO keyed_min_max_stream (ticketid, val, status) VALUES ('t3', 140, 1), ('t1', 80, 0);
SELECT * FROM keyed_min_max2 WHERE ticketid = 't1';
 ticketid | v0 | v0_status 
----------+----+-----------
 t1       | 80 |         0
(1 row)

SELECT * FROM keyed_min_max3 WHERE ticketid = 't1';
 ticketid | oldv0 | newv0 
----------+-------+-------
 t1       |       |   124
 t1       |   124 |    80
(2 rows)

DROP CONTINUOUS VIEW keyed_min_max3;
DROP CONTINUOUS VIEW keyed_min_max2;
DROP STREAM keyed_min_max_stream;
