--
-- Regression tests for schemas (namespaces)
--
CREATE SCHEMA test_schema_1
       CREATE UNIQUE INDEX abc_a_idx ON abc (a)
       CREATE VIEW abc_view AS
              SELECT a+1 AS a, b+1 AS b FROM abc
       CREATE TABLE abc (
              a serial,
              b int UNIQUE
       );
ERROR:  Cannot create index whose evaluation cannot be enforced to remote nodes
-- verify that the objects were created
SELECT COUNT(*) FROM pg_class WHERE relnamespace =
    (SELECT oid FROM pg_namespace WHERE nspname = 'test_schema_1');
 count 
-------
     0
(1 row)

INSERT INTO test_schema_1.abc DEFAULT VALUES;
ERROR:  relation "test_schema_1.abc" does not exist
LINE 1: INSERT INTO test_schema_1.abc DEFAULT VALUES;
                    ^
INSERT INTO test_schema_1.abc DEFAULT VALUES;
ERROR:  relation "test_schema_1.abc" does not exist
LINE 1: INSERT INTO test_schema_1.abc DEFAULT VALUES;
                    ^
INSERT INTO test_schema_1.abc DEFAULT VALUES;
ERROR:  relation "test_schema_1.abc" does not exist
LINE 1: INSERT INTO test_schema_1.abc DEFAULT VALUES;
                    ^
SELECT * FROM test_schema_1.abc ORDER BY a;
ERROR:  relation "test_schema_1.abc" does not exist
LINE 1: SELECT * FROM test_schema_1.abc ORDER BY a;
                      ^
SELECT * FROM test_schema_1.abc_view ORDER BY a;
ERROR:  relation "test_schema_1.abc_view" does not exist
LINE 1: SELECT * FROM test_schema_1.abc_view ORDER BY a;
                      ^
-- test IF NOT EXISTS cases
CREATE SCHEMA test_schema_1; -- fail, already exists
CREATE SCHEMA IF NOT EXISTS test_schema_1; -- ok with notice
NOTICE:  schema "test_schema_1" already exists, skipping
CREATE SCHEMA IF NOT EXISTS test_schema_1 -- fail, disallowed
       CREATE TABLE abc (
              a serial,
              b int UNIQUE
       );
ERROR:  CREATE SCHEMA IF NOT EXISTS cannot include schema elements
LINE 2:        CREATE TABLE abc (
               ^
DROP SCHEMA test_schema_1 CASCADE;
-- verify that the objects were dropped
SELECT COUNT(*) FROM pg_class WHERE relnamespace =
    (SELECT oid FROM pg_namespace WHERE nspname = 'test_schema_1');
 count 
-------
     0
(1 row)

