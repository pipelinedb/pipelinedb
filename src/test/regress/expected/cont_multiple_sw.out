SET IntervalStyle to postgres;
-- We can't reference arrival_timestamp if the underlying CV isn't a SW
CREATE CONTINUOUS VIEW msw0 AS SELECT x::integer, COUNT(*) FROM msw_stream
WHERE x > 10 GROUP BY x;
CREATE VIEW msw1 AS SELECT combine(count) AS count FROM msw0
WHERE arrival_timestamp > clock_timestamp() - interval '2 seconds';
ERROR:  column "arrival_timestamp" does not exist
LINE 2: WHERE arrival_timestamp > clock_timestamp() - interval '2 se...
              ^
DROP CONTINUOUS VIEW msw0;
CREATE CONTINUOUS VIEW msw0 AS SELECT x::integer, COUNT(*), avg(x) FROM msw_stream
WHERE second(arrival_timestamp) > clock_timestamp() - interval '1 minute' GROUP BY x;
CREATE VIEW msw1 AS SELECT combine(count) AS count, combine(avg) AS avg FROM msw0
WHERE arrival_timestamp > clock_timestamp() - interval '2 seconds';
-- Verify that we can use max_age on views that read from SW CVs
CREATE VIEW msw1_ma WITH (max_age = '2 seconds') AS SELECT combine(count) AS count, combine(avg) AS avg FROM msw0;
\d+ msw1_ma;
                View "public.msw1_ma"
 Column |  Type   | Modifiers | Storage | Description 
--------+---------+-----------+---------+-------------
 count  | bigint  |           | plain   | 
 avg    | numeric |           | main    | 
View definition:
 SELECT combine(msw0.count) AS count,
    int8_avg(combine(msw0.avg)) AS avg
   FROM msw0
  WHERE arrival_timestamp > (clock_timestamp() - '00:00:02'::interval);

CREATE VIEW msw2 AS SELECT combine(count) AS count, combine(avg) AS avg FROM msw0
WHERE arrival_timestamp > clock_timestamp() - interval '5 seconds';
INSERT INTO msw_stream (x) SELECT generate_series(1, 100) AS x;
SELECT * FROM msw0 ORDER BY x;
  x  | count |          avg           
-----+-------+------------------------
   1 |     1 | 1.00000000000000000000
   2 |     1 |     2.0000000000000000
   3 |     1 |     3.0000000000000000
   4 |     1 |     4.0000000000000000
   5 |     1 |     5.0000000000000000
   6 |     1 |     6.0000000000000000
   7 |     1 |     7.0000000000000000
   8 |     1 |     8.0000000000000000
   9 |     1 |     9.0000000000000000
  10 |     1 |    10.0000000000000000
  11 |     1 |    11.0000000000000000
  12 |     1 |    12.0000000000000000
  13 |     1 |    13.0000000000000000
  14 |     1 |    14.0000000000000000
  15 |     1 |    15.0000000000000000
  16 |     1 |    16.0000000000000000
  17 |     1 |    17.0000000000000000
  18 |     1 |    18.0000000000000000
  19 |     1 |    19.0000000000000000
  20 |     1 |    20.0000000000000000
  21 |     1 |    21.0000000000000000
  22 |     1 |    22.0000000000000000
  23 |     1 |    23.0000000000000000
  24 |     1 |    24.0000000000000000
  25 |     1 |    25.0000000000000000
  26 |     1 |    26.0000000000000000
  27 |     1 |    27.0000000000000000
  28 |     1 |    28.0000000000000000
  29 |     1 |    29.0000000000000000
  30 |     1 |    30.0000000000000000
  31 |     1 |    31.0000000000000000
  32 |     1 |    32.0000000000000000
  33 |     1 |    33.0000000000000000
  34 |     1 |    34.0000000000000000
  35 |     1 |    35.0000000000000000
  36 |     1 |    36.0000000000000000
  37 |     1 |    37.0000000000000000
  38 |     1 |    38.0000000000000000
  39 |     1 |    39.0000000000000000
  40 |     1 |    40.0000000000000000
  41 |     1 |    41.0000000000000000
  42 |     1 |    42.0000000000000000
  43 |     1 |    43.0000000000000000
  44 |     1 |    44.0000000000000000
  45 |     1 |    45.0000000000000000
  46 |     1 |    46.0000000000000000
  47 |     1 |    47.0000000000000000
  48 |     1 |    48.0000000000000000
  49 |     1 |    49.0000000000000000
  50 |     1 |    50.0000000000000000
  51 |     1 |    51.0000000000000000
  52 |     1 |    52.0000000000000000
  53 |     1 |    53.0000000000000000
  54 |     1 |    54.0000000000000000
  55 |     1 |    55.0000000000000000
  56 |     1 |    56.0000000000000000
  57 |     1 |    57.0000000000000000
  58 |     1 |    58.0000000000000000
  59 |     1 |    59.0000000000000000
  60 |     1 |    60.0000000000000000
  61 |     1 |    61.0000000000000000
  62 |     1 |    62.0000000000000000
  63 |     1 |    63.0000000000000000
  64 |     1 |    64.0000000000000000
  65 |     1 |    65.0000000000000000
  66 |     1 |    66.0000000000000000
  67 |     1 |    67.0000000000000000
  68 |     1 |    68.0000000000000000
  69 |     1 |    69.0000000000000000
  70 |     1 |    70.0000000000000000
  71 |     1 |    71.0000000000000000
  72 |     1 |    72.0000000000000000
  73 |     1 |    73.0000000000000000
  74 |     1 |    74.0000000000000000
  75 |     1 |    75.0000000000000000
  76 |     1 |    76.0000000000000000
  77 |     1 |    77.0000000000000000
  78 |     1 |    78.0000000000000000
  79 |     1 |    79.0000000000000000
  80 |     1 |    80.0000000000000000
  81 |     1 |    81.0000000000000000
  82 |     1 |    82.0000000000000000
  83 |     1 |    83.0000000000000000
  84 |     1 |    84.0000000000000000
  85 |     1 |    85.0000000000000000
  86 |     1 |    86.0000000000000000
  87 |     1 |    87.0000000000000000
  88 |     1 |    88.0000000000000000
  89 |     1 |    89.0000000000000000
  90 |     1 |    90.0000000000000000
  91 |     1 |    91.0000000000000000
  92 |     1 |    92.0000000000000000
  93 |     1 |    93.0000000000000000
  94 |     1 |    94.0000000000000000
  95 |     1 |    95.0000000000000000
  96 |     1 |    96.0000000000000000
  97 |     1 |    97.0000000000000000
  98 |     1 |    98.0000000000000000
  99 |     1 |    99.0000000000000000
 100 |     1 |   100.0000000000000000
(100 rows)

SELECT * FROM msw1;
 count |         avg         
-------+---------------------
   100 | 50.5000000000000000
(1 row)

SELECT * FROM msw1_ma;
 count |         avg         
-------+---------------------
   100 | 50.5000000000000000
(1 row)

SELECT * FROM msw2;
 count |         avg         
-------+---------------------
   100 | 50.5000000000000000
(1 row)

SELECT pg_sleep(2.1);
 pg_sleep 
----------
 
(1 row)

SELECT * FROM msw0  ORDER BY x;
  x  | count |          avg           
-----+-------+------------------------
   1 |     1 | 1.00000000000000000000
   2 |     1 |     2.0000000000000000
   3 |     1 |     3.0000000000000000
   4 |     1 |     4.0000000000000000
   5 |     1 |     5.0000000000000000
   6 |     1 |     6.0000000000000000
   7 |     1 |     7.0000000000000000
   8 |     1 |     8.0000000000000000
   9 |     1 |     9.0000000000000000
  10 |     1 |    10.0000000000000000
  11 |     1 |    11.0000000000000000
  12 |     1 |    12.0000000000000000
  13 |     1 |    13.0000000000000000
  14 |     1 |    14.0000000000000000
  15 |     1 |    15.0000000000000000
  16 |     1 |    16.0000000000000000
  17 |     1 |    17.0000000000000000
  18 |     1 |    18.0000000000000000
  19 |     1 |    19.0000000000000000
  20 |     1 |    20.0000000000000000
  21 |     1 |    21.0000000000000000
  22 |     1 |    22.0000000000000000
  23 |     1 |    23.0000000000000000
  24 |     1 |    24.0000000000000000
  25 |     1 |    25.0000000000000000
  26 |     1 |    26.0000000000000000
  27 |     1 |    27.0000000000000000
  28 |     1 |    28.0000000000000000
  29 |     1 |    29.0000000000000000
  30 |     1 |    30.0000000000000000
  31 |     1 |    31.0000000000000000
  32 |     1 |    32.0000000000000000
  33 |     1 |    33.0000000000000000
  34 |     1 |    34.0000000000000000
  35 |     1 |    35.0000000000000000
  36 |     1 |    36.0000000000000000
  37 |     1 |    37.0000000000000000
  38 |     1 |    38.0000000000000000
  39 |     1 |    39.0000000000000000
  40 |     1 |    40.0000000000000000
  41 |     1 |    41.0000000000000000
  42 |     1 |    42.0000000000000000
  43 |     1 |    43.0000000000000000
  44 |     1 |    44.0000000000000000
  45 |     1 |    45.0000000000000000
  46 |     1 |    46.0000000000000000
  47 |     1 |    47.0000000000000000
  48 |     1 |    48.0000000000000000
  49 |     1 |    49.0000000000000000
  50 |     1 |    50.0000000000000000
  51 |     1 |    51.0000000000000000
  52 |     1 |    52.0000000000000000
  53 |     1 |    53.0000000000000000
  54 |     1 |    54.0000000000000000
  55 |     1 |    55.0000000000000000
  56 |     1 |    56.0000000000000000
  57 |     1 |    57.0000000000000000
  58 |     1 |    58.0000000000000000
  59 |     1 |    59.0000000000000000
  60 |     1 |    60.0000000000000000
  61 |     1 |    61.0000000000000000
  62 |     1 |    62.0000000000000000
  63 |     1 |    63.0000000000000000
  64 |     1 |    64.0000000000000000
  65 |     1 |    65.0000000000000000
  66 |     1 |    66.0000000000000000
  67 |     1 |    67.0000000000000000
  68 |     1 |    68.0000000000000000
  69 |     1 |    69.0000000000000000
  70 |     1 |    70.0000000000000000
  71 |     1 |    71.0000000000000000
  72 |     1 |    72.0000000000000000
  73 |     1 |    73.0000000000000000
  74 |     1 |    74.0000000000000000
  75 |     1 |    75.0000000000000000
  76 |     1 |    76.0000000000000000
  77 |     1 |    77.0000000000000000
  78 |     1 |    78.0000000000000000
  79 |     1 |    79.0000000000000000
  80 |     1 |    80.0000000000000000
  81 |     1 |    81.0000000000000000
  82 |     1 |    82.0000000000000000
  83 |     1 |    83.0000000000000000
  84 |     1 |    84.0000000000000000
  85 |     1 |    85.0000000000000000
  86 |     1 |    86.0000000000000000
  87 |     1 |    87.0000000000000000
  88 |     1 |    88.0000000000000000
  89 |     1 |    89.0000000000000000
  90 |     1 |    90.0000000000000000
  91 |     1 |    91.0000000000000000
  92 |     1 |    92.0000000000000000
  93 |     1 |    93.0000000000000000
  94 |     1 |    94.0000000000000000
  95 |     1 |    95.0000000000000000
  96 |     1 |    96.0000000000000000
  97 |     1 |    97.0000000000000000
  98 |     1 |    98.0000000000000000
  99 |     1 |    99.0000000000000000
 100 |     1 |   100.0000000000000000
(100 rows)

SELECT * FROM msw1;
 count | avg 
-------+-----
     0 |    
(1 row)

SELECT * FROM msw1_ma;
 count | avg 
-------+-----
     0 |    
(1 row)

SELECT * FROM msw2;
 count |         avg         
-------+---------------------
   100 | 50.5000000000000000
(1 row)

SELECT pg_sleep(3);
 pg_sleep 
----------
 
(1 row)

SELECT * FROM msw0  ORDER BY x;
  x  | count |          avg           
-----+-------+------------------------
   1 |     1 | 1.00000000000000000000
   2 |     1 |     2.0000000000000000
   3 |     1 |     3.0000000000000000
   4 |     1 |     4.0000000000000000
   5 |     1 |     5.0000000000000000
   6 |     1 |     6.0000000000000000
   7 |     1 |     7.0000000000000000
   8 |     1 |     8.0000000000000000
   9 |     1 |     9.0000000000000000
  10 |     1 |    10.0000000000000000
  11 |     1 |    11.0000000000000000
  12 |     1 |    12.0000000000000000
  13 |     1 |    13.0000000000000000
  14 |     1 |    14.0000000000000000
  15 |     1 |    15.0000000000000000
  16 |     1 |    16.0000000000000000
  17 |     1 |    17.0000000000000000
  18 |     1 |    18.0000000000000000
  19 |     1 |    19.0000000000000000
  20 |     1 |    20.0000000000000000
  21 |     1 |    21.0000000000000000
  22 |     1 |    22.0000000000000000
  23 |     1 |    23.0000000000000000
  24 |     1 |    24.0000000000000000
  25 |     1 |    25.0000000000000000
  26 |     1 |    26.0000000000000000
  27 |     1 |    27.0000000000000000
  28 |     1 |    28.0000000000000000
  29 |     1 |    29.0000000000000000
  30 |     1 |    30.0000000000000000
  31 |     1 |    31.0000000000000000
  32 |     1 |    32.0000000000000000
  33 |     1 |    33.0000000000000000
  34 |     1 |    34.0000000000000000
  35 |     1 |    35.0000000000000000
  36 |     1 |    36.0000000000000000
  37 |     1 |    37.0000000000000000
  38 |     1 |    38.0000000000000000
  39 |     1 |    39.0000000000000000
  40 |     1 |    40.0000000000000000
  41 |     1 |    41.0000000000000000
  42 |     1 |    42.0000000000000000
  43 |     1 |    43.0000000000000000
  44 |     1 |    44.0000000000000000
  45 |     1 |    45.0000000000000000
  46 |     1 |    46.0000000000000000
  47 |     1 |    47.0000000000000000
  48 |     1 |    48.0000000000000000
  49 |     1 |    49.0000000000000000
  50 |     1 |    50.0000000000000000
  51 |     1 |    51.0000000000000000
  52 |     1 |    52.0000000000000000
  53 |     1 |    53.0000000000000000
  54 |     1 |    54.0000000000000000
  55 |     1 |    55.0000000000000000
  56 |     1 |    56.0000000000000000
  57 |     1 |    57.0000000000000000
  58 |     1 |    58.0000000000000000
  59 |     1 |    59.0000000000000000
  60 |     1 |    60.0000000000000000
  61 |     1 |    61.0000000000000000
  62 |     1 |    62.0000000000000000
  63 |     1 |    63.0000000000000000
  64 |     1 |    64.0000000000000000
  65 |     1 |    65.0000000000000000
  66 |     1 |    66.0000000000000000
  67 |     1 |    67.0000000000000000
  68 |     1 |    68.0000000000000000
  69 |     1 |    69.0000000000000000
  70 |     1 |    70.0000000000000000
  71 |     1 |    71.0000000000000000
  72 |     1 |    72.0000000000000000
  73 |     1 |    73.0000000000000000
  74 |     1 |    74.0000000000000000
  75 |     1 |    75.0000000000000000
  76 |     1 |    76.0000000000000000
  77 |     1 |    77.0000000000000000
  78 |     1 |    78.0000000000000000
  79 |     1 |    79.0000000000000000
  80 |     1 |    80.0000000000000000
  81 |     1 |    81.0000000000000000
  82 |     1 |    82.0000000000000000
  83 |     1 |    83.0000000000000000
  84 |     1 |    84.0000000000000000
  85 |     1 |    85.0000000000000000
  86 |     1 |    86.0000000000000000
  87 |     1 |    87.0000000000000000
  88 |     1 |    88.0000000000000000
  89 |     1 |    89.0000000000000000
  90 |     1 |    90.0000000000000000
  91 |     1 |    91.0000000000000000
  92 |     1 |    92.0000000000000000
  93 |     1 |    93.0000000000000000
  94 |     1 |    94.0000000000000000
  95 |     1 |    95.0000000000000000
  96 |     1 |    96.0000000000000000
  97 |     1 |    97.0000000000000000
  98 |     1 |    98.0000000000000000
  99 |     1 |    99.0000000000000000
 100 |     1 |   100.0000000000000000
(100 rows)

SELECT * FROM msw1;
 count | avg 
-------+-----
     0 |    
(1 row)

SELECT * FROM msw1_ma;
 count | avg 
-------+-----
     0 |    
(1 row)

SELECT * FROM msw2;
 count | avg 
-------+-----
     0 |    
(1 row)

-- View depends on CV
DROP CONTINUOUS VIEW msw0;
ERROR:  cannot drop continuous view msw0 because other objects depend on it
DETAIL:  view msw1 depends on continuous view msw0
view msw1_ma depends on continuous view msw0
view msw2 depends on continuous view msw0
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
DROP CONTINUOUS VIEW msw0 CASCADE;
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to view msw1
drop cascades to view msw1_ma
drop cascades to view msw2
CREATE CONTINUOUS VIEW msw3 AS SELECT
	x::integer + 10 AS a,
	x - y::integer AS b,
	substring(z::text, 1, 2) AS c
FROM msw_stream
WHERE arrival_timestamp > clock_timestamp() - interval '1 minute';
CREATE VIEW msw4 AS SELECT * FROM msw3
WHERE arrival_timestamp > clock_timestamp() - interval '2 seconds';
INSERT INTO msw_stream (x, y, z) VALUES (0, 10, 'two');
INSERT INTO msw_stream (x, y, z) VALUES (1, 20, 'three');
INSERT INTO msw_stream (x, y, z) VALUES (2, 30, 'four');
SELECT * FROM msw3 ORDER BY a;
 a  |  b  | c  
----+-----+----
 10 | -10 | tw
 11 | -19 | th
 12 | -28 | fo
(3 rows)

SELECT * FROM msw4 ORDER BY a;
 a  |  b  | c  
----+-----+----
 10 | -10 | tw
 11 | -19 | th
 12 | -28 | fo
(3 rows)

SELECT pg_sleep(2.1);
 pg_sleep 
----------
 
(1 row)

SELECT * FROM msw3 ORDER BY a;
 a  |  b  | c  
----+-----+----
 10 | -10 | tw
 11 | -19 | th
 12 | -28 | fo
(3 rows)

SELECT * FROM msw4 ORDER BY a;
 a | b | c 
---+---+---
(0 rows)

DROP CONTINUOUS VIEW msw3 CASCADE;
NOTICE:  drop cascades to view msw4
CREATE CONTINUOUS VIEW msw5 AS
SELECT
  minute(arrival_timestamp) AS sw_time
FROM stream
WHERE minute(arrival_timestamp) > clock_timestamp() - INTERVAL '10 minute';
\d+ msw5
                     Continuous view "public.msw5"
 Column  |           Type           | Modifiers | Storage | Description 
---------+--------------------------+-----------+---------+-------------
 sw_time | timestamp with time zone |           | plain   | 
View definition:
 SELECT minute(arrival_timestamp::timestamp with time zone) AS sw_time
   FROM ONLY stream
  WHERE minute(arrival_timestamp::timestamp with time zone) > (clock_timestamp() - '00:10:00'::interval);

CREATE VIEW msw6 WITH (max_age = '1 minute') AS SELECT * FROM msw5;
\d+ msw6
                           View "public.msw6"
 Column  |           Type           | Modifiers | Storage | Description 
---------+--------------------------+-----------+---------+-------------
 sw_time | timestamp with time zone |           | plain   | 
View definition:
 SELECT msw5.sw_time
   FROM msw5
  WHERE arrival_timestamp > (clock_timestamp() - '00:01:00'::interval);

SELECT * FROM msw6;
 sw_time 
---------
(0 rows)

CREATE VIEW msw7 AS SELECT * FROM msw5 WHERE sw_time > clock_timestamp() - INTERVAL '1 minute';
\d+ msw7
                           View "public.msw7"
 Column  |           Type           | Modifiers | Storage | Description 
---------+--------------------------+-----------+---------+-------------
 sw_time | timestamp with time zone |           | plain   | 
View definition:
 SELECT msw5.sw_time
   FROM msw5
  WHERE msw5.sw_time > (clock_timestamp() - '00:01:00'::interval);

SELECT * FROM msw7;
 sw_time 
---------
(0 rows)

DROP CONTINUOUS VIEW msw5 CASCADE;
NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to view msw6
drop cascades to view msw7
