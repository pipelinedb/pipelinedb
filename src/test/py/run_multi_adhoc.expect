#!/usr/bin/expect

# capture all the output from an adhoc query

log_user 0
set timeout 2

set psql [lindex $argv 0];
set port [lindex $argv 1];
set db [lindex $argv 2];
set query1 [lindex $argv 3];
set query2 [lindex $argv 4];
set input_file [lindex $argv 5];

# spawn two adhoc selectors and sync off first two lines

spawn $psql -p $port -d $db -c "select pipeline_exec_adhoc_query('$query1');"
set adhoc1 $spawn_id

expect -re "(h.*?)\r\n"
puts "$expect_out(1,string)"
expect -re "(k.*?)\r\n"
puts "$expect_out(1,string)"

spawn $psql -p $port -d $db -c "select pipeline_exec_adhoc_query('$query2');"
set adhoc2 $spawn_id

expect -re "(h.*?)\r\n"
puts "$expect_out(1,string)"
expect -re "(k.*?)\r\n"
puts "$expect_out(1,string)"

# spawn an inserter
spawn $psql -p $port -d $db -f $input_file
set inserter $spawn_id

# this loop will break out on timeout or eofs.
expect {
	-i adhoc1 -re "^(.*)\r\n" {
		puts "adhoc1"
		puts "$expect_out(1,string)"
		exp_continue
	}

	-i adhoc2 -re "^(.*)\r\n" {
		puts "adhoc2"
		puts "$expect_out(1,string)"
		exp_continue
	}

	-i inserter -re "(.*)\r\n" {
		exp_continue
	}
}

# read off all adhoc1 until timeout
expect {
	-i adhoc1 -re "(.*)\r\n" {
		puts "adhoc1"
		puts "$expect_out(1,string)"
		exp_continue
	}
}

# read off all adhoc2 until timeout
expect {
	-i adhoc2 -re "(.*)\r\n" {
		puts "adhoc2"
		puts "$expect_out(1,string)"
		exp_continue
	}
}

# send ctrl c and wait
set spawn_id $adhoc1
send \003
wait

set spawn_id $adhoc2
send \003
wait
